			      СОДЕРЖАНИЕ

1. Анализатор QUAID . . . . . . . . . . . . . . . . . . . . . . . . 1
2. Краткое описание работы  . . . . . . . . . . . . . . . . . . . . 1
3. Размещение анализатора QA в памяти . . . . . . . . . . . . . . . 1
4. Управление анализатором QA . . . . . . . . . . . . . . . . . . . 2
5. Меню . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2
6. Функции меню . . . . . . . . . . . . . . . . . . . . . . . . . . 3
   6.1. Выход в программу пользователя	. . . . . . . . . . . . . . 3
   6.2. Контрольная точка . . . . . . . . . . . . . . . . . . . . . 3
   6.3. Дополнительная функция	. . . . . . . . . . . . . . . . . . 3
   6.4. Рабочая функция . . . . . . . . . . . . . . . . . . . . . . 3
   6.5. Порт  . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
   6.6. Скрыть	. . . . . . . . . . . . . . . . . . . . . . . . . . 4
   6.7. Загрузка  . . . . . . . . . . . . . . . . . . . . . . . . . 4
   6.8. Справка . . . . . . . . . . . . . . . . . . . . . . . . . . 4
   6.9. Экран . . . . . . . . . . . . . . . . . . . . . . . . . . . 4
7. Отображение трассировки  . . . . . . . . . . . . . . . . . . . . 4
8. Отображение программы  . . . . . . . . . . . . . . . . . . . . . 5
9. Отображение регистров  . . . . . . . . . . . . . . . . . . . . . 5
10. Изменение значения регистров  . . . . . . . . . . . . . . . . . 5
11. Отображение команд	. . . . . . . . . . . . . . . . . . . . . . 6
12. Отображение памяти	. . . . . . . . . . . . . . . . . . . . . . 7
13. Отображение ссылок	. . . . . . . . . . . . . . . . . . . . . . 7
14. Отображение векторов  . . . . . . . . . . . . . . . . . . . . . 8
15. Типы прерываний . . . . . . . . . . . . . . . . . . . . . . . . 8
    15.1. Трассировка . . . . . . . . . . . . . . . . . . . . . . . 8
    15.2. Ключевое прерывание . . . . . . . . . . . . . . . . . . . 8
16. Типы внутренних записей . . . . . . . . . . . . . . . . . . . . 9
17. Трассировка загрузки  . . . . . . . . . . . . . . . . . . . . . 11
18. Труднодоступные прерывания	. . . . . . . . . . . . . . . . . . 12
    18.1. Клавиатура  . . . . . . . . . . . . . . . . . . . . . . . 12
    18.2. Асинхронные прерывания  . . . . . . . . . . . . . . . . . 12
    18.3. Таймер  . . . . . . . . . . . . . . . . . . . . . . . . . 12
19. Примечания	. . . . . . . . . . . . . . . . . . . . . . . . . . 13
20. Пошаговое выполнение  . . . . . . . . . . . . . . . . . . . . . 13

			   1. АНАЛИЗАТОР  QUAID

	Анализатор   Quaid   (в   дальнейшем  QA)   предназначен   для
диагностики   программ	IBM PC	(даже таких  программ,	исходные  коды
которых  недоступны  или содержат  средства,  исключающие  возможность
трассировки  их функций).   Содержимое памяти и  команды  отображаются
Анализатором QA подобно отображению  текста текстовым процессором.
	Программа является незащищённой от случайной записи, поэтому
перед  работой с ней рекомендуется сделать архивную копию с  помощью
команды копирования DOS.

		       2. КРАТКОЕ ОПИСАНИЕ РАБОТЫ 

	Введите QA в ответ на подсказку DOS. После ответа нажмите кла-
виши  <Shift><PrtSc>, <F3> , курсор вниз на 21 строку (int 21),  <Enter> ,
<F1>, <Enter>. После возврата на подсказку DOS введите  <dir> и <Enter> .
	На экране появится режим трассировки. Всякий раз при его появ-
лении следует нажать клавишу <Enter>. При работе с трассировкой для
отображения команд нажимается клавиша <F1>, а для работы с меню - кла-
виша <Esc>. В дальнейшем (и в том и в другом случае) для продолжения
работы используется <F1> и <Enter>.
	Для окончания трассировки следует нажать <F3>, курсор вниз на
21  строку,  <DEL>,  <F1>,  <Enter> и (если снова появится отображение
трассировки)  ещё раз <Enter>.  После выхода в систему можно	работать
как обычно за исключением того,  что комбинация КЛАВИШ	<Shift><PrtSc>
будет вызывать Анализатор QA, а не печать экрана.
	Анализатор  QA является инструментом для диагностики  программ
на уровне машинного языка и вызовов прерываний.

		   3. РАЗМЕЩЕНИЕ АНАЛИЗАТОРА QA В ПАМЯТИ

	Анализатор QA может занимать
	- временную память подобно программам DOS, освобождающим па-
мять по окончании работы;
	- постоянную память подобно программам, остающимся после
загрузки в резидентной памяти, таким как Sidekick, The Envelop Please;
	- скрытую память. При использовании этого метода Анализатор
QA занимает память за пределами, доступными DOS.  Не начинайте с
этой возможности.
	Для размещения Анализатора QA во временной памяти следует
набрать  по  подсказке DOS команду QA.	Начав с  меню,	можно  вызвать
некоторые функции  Анализатора для опроса  состояния ЭВМ. При выходе в
программу  пользователя Анализатор освободит занимаемую им память  при
условии,  что пользователь не трассировал никакие прерывания.
	Для размещения Анализатора QA в постоянной памяти следует на-
брать команду QA * в ответ на подсказку DOS. Анализатор разместится в
памяти (использовав процесс завершения DOS) и останется резидентным,
выполнив выход на подсказку DOS. После этого по нажатию <Shift><PrtSc>
можно вызывать Анализатор.
	Вызвать Анализатор в постоянную память можно также по команде
QA (в DOS), выполнив трассировку хотя бы одного прерывания перед выхо-
дом   в   программу  пользователя.   Последующий   вызов   Анализатора
определяется  характером  выполненной  трассировки  прерываний.   Так,
трассировка прерываний,  используемых Анализатором для выхода в DOS,
таких  как 21h (int 21h),  приводит к сбою Анализатора	с  последующей
перезагрузкой  ЭВМ.  Для размещения Анализатора в скрытой памяти нужно
запустить  его,  используя  любой из указанных выше  методов.  В  меню
требуется выбрать функцию  "скрыть" (conceal). Анализатор перемещается
к  наивысшему адресу и изменяет слово размера памяти   BIOS  так,  что
сам   исключается   из	 памяти.   Но  так  как  при  этом  нарушается
целостность  других программ в	памяти,  то в результате нельзя  будет
произвести выход в программу пользователя.

		      4. УПРАВЛЕНИЕ АНАЛИЗАТОРОМ QA

     Переключение режимов выполняется с помощью функциональных клавиш
F1-F4 или <ESC>:
     <F1> -  отображение трассировки;
     <F2> -  отбражение программы;
     <F3> -  отображение вектора;
     <F4> -  отображение программы пользователя (прерванной);
     <ESC> - меню.

				 5. МЕНЮ

	С помощью меню можно управлять многими функциями Анализатора.
Выход  в  меню	из любой  точки  Анализатора  выполняется  посредством
нажатия клавиши <ESC>.  Для выбора функций в меню используются клавиши
управления курсором (вверх,  вниз, вправо, влево). Изменение режимов
производится   с   помощью  клавиш  <+>  и  <->.   Клавиша   <Enter>
осуществляет выполнение функции после установки  режимов.  Некоторые
из функций меню, например, загрузка, появляются на экране только в том
случае, если они разрешены для выполнения.

			     6. ФУНКЦИИ МЕНЮ

	6.1. Выход в программу пользователя - возврат управления про-
	(Exit to user ) 		 грамме пользователя
При запуске Анализатора из временной памяти происходит возврат в DOS
и либо освобождение памяти, занятой Анализатором (если не производилась
трассировка прерываний), либо размещение Анализатора в постоянной час-
ти памяти как резидентной программы с помощью процесса завершения DOS.

	6.2. Контрольная точка . При установке постоянных контрольных
	(Breakpoint)	    точек любую из них можно выбрать по клавише
<+>. Выбранная контрольная точка выводится на экран в режиме отображе-
ния команд с помощью клавиши <Enter>.

	6.3. Дополнительная функция. Выбрав режим и нажав клавишу
<Enter>, можно получить следующие сведения о состоянии ЭВМ:
     Map  - выводит распределение памяти DOS;
     UART - выводит содержимое регистров двух последовательных портов.
	    При чтении IIR (регистр идентификации прерывания) произво-
	    дится чистка висящих прерываний, т.е. при отображении может
	    измениться состояние последовательного порта. Обычно это не
	    вызывает серьёзных последствий.
     DMA  - выводит содержимое адресных регистров и счётчиков  для каж-
	    дого DMA;
     CMOS - показывает тип ЭВМ  из  байта  идентификации ROM по адресу
	    FFFFEh. Если это AT, то следует дальнейшее содержимое CMOS
	    (16-ричн.) и его интерпретация. Указывается также день в
	    байте дня недели, но он, похоже, неверно устанавливается
	    при настройке  ЭВМ.
     Diskette - интерпретирует содержимое области параметров дискеты
		на которую указывает вектор 1Eh.

	6.4. Рабочая функция. Установив режимы рабочей функции и нажав
	(Work display)	     <ENTER>, можно выйти на те же режимы,
которые устанавливаются функциональными клавишами <F1> - <F4>.

	6.5. Порт. В этой строке можно читать, изменять или управлять
	(Port)	  содержимым порта ввода/вывода.
     Первый режим включает:
     off - функция ничего не выполняет,
     read <ENTER> - отображение содержимого порта,
     write <ENTER> - запись данных в порт,
     trace <ENTER> - прогоняет программу пользователя до обращения к
		       порту.
     Второй режим - пересылка данных в порт или чтение из порта. Можно
изменять любые цифры, буквы a - f, <+>, <->.
     Третий  режим  - номер  порта (16-ричн.).	Можно  изменять  любые
цифры,	буквы a - f, <+> или <->. Справа в этом поле располагается имя
устройства, закреплённого за портом.

	6.6. Скрыть. После нажатия <ENTER> Анализатор вводится в
	(Conceal)   верхнюю часть памяти и изменяет слово размера памяти
BIOS с тем, чтобы Анализатор оказался за пределами доступной памяти.

	6.7. Загрузка. Работает только при использовании скрытой памя-
	(Boot)	     ти. После нажатия <ENTER> инициируется внутренняя
загрузка, прерывание 19h.

	6.8. Справка (Help) - краткая информация о программе.

	6.9.  Экран.	Первый	режим может быть быстрым или  медленным.
	(Screen)      Быстрый работает с любой системой, но "снежит" с
цветным графическим адаптером IBM. (Избавиться от "снега" на цветном
графическом  адаптере  можно,	установив  медленный режим). Медленный
не  производит	запись в буфер при использовании  этого  адаптера.  По
умолчанию  выбирается быстрый. Ввиду того, что	медленный режим читает
порт  3DAh,  это  может вызвать сбой ЭВМ с необычным	оборудованием  и
помешать трассировке программы.
      Клавиша  "курсор  вправо"  позволяет  изменять  наборы   цветов,
используемые Анализатором  для отображения.

			7. ОТОБРАЖЕНИЕ ТРАССИРОВКИ

	Это отображение появляется после трассировки прерывания. Выход
в программу пользователя выполняется по нажатию клавиши <ENTER>.

	Значения полей:
	- номер строки;
	- номер   прерывания  (ему  могут  предшествовать   звёздочки,
показывающие  уровень  вложенности).   Более  точно,   они  показывают
количество активных внутренних записей типа "return";
	- интерпретация  значения   прерывания	(выдаются   прерывания
 до 21h), функции DOS и кратко прерывания с неприсвоенными функциями.
	- при	использовании	трассировки  типа  in/out   Анализатор
помещает результат в той же строке, что и отображение прерывания. Если
это  невозможно,  то  создаётся  новая	строка,  выводимая  информация
всегда	выравнивается справа.
	Для ускорения трассировки следует нажать клавишу <->. Вставка
числового значения производится с помощью цифровых клавиш, изменение -
с помощью клавиш <+>, <-> или <backspace>. Клавиша <ENTER> выводит все
оставшиеся  строки перед появлением следующего отчёта.	Клавиша  <ESC>
используется для выхода после ошибочного нажатия клавиши <->.

			8. ОТОБРАЖЕНИЕ ПРОГРАММЫ

	Отображается содержимое регистров и текст программы. Для пере-
движения курсора влево (в области отображения регистра) нужно нажать
клавишу <->, размещённую среди клавиш управления курсором.

			9. ОТОБРАЖЕНИЕ РЕГИСТРОВ

	Клавиши управления курсором (стрелки) управляют передвижением
по регистрам. Клавиша <-> выполняет возврат.

		     10. ИЗМЕНЕНИЕ ЗНАЧЕНИЯ РЕГИСТРОВ

	- установите  курсор  на регистре,  нажмите  клавишу  <ENTER>,
справа	появится  слово  "edit".  Наберите новое  16-ричное  значение.
Передвиньте курсор и слово "edit" исчезнет;
	- установите курсор на регистре (за исключением полей flags
или  search  (поиск)).  Клавиша  <+> перемещает регистр  и	сегмент  к
отметке данные (data) или код (code) и может менять их местами;
	- при  выходе  из  отображения вектора	прерывания  из	строки
курсора переносится в область кода.
	За регистром CS:IP размещается 16-битовый регистр флажков. Для
изменения одного из битов передвиньте курсор на соответствующее поле,
нажмите клавиши <ENTER> и <0> или <1> (в буквенно - цифровой
части клавиатуры).
	За   флажками	располагается	поле   поиска.	 Клавиша   <+>
осуществляет перевод символьного и шестнадцатеричного форматов.  Затем
нажимается клавиша <ENTER> и набирается требуемая цепочка для  поиска.
Нажатием  <F10>  начинается  выполнение  поиска.  Если  цепочка  будет
найдена, то поле "данные" (data) будет указывать на 1-й байт найденной
цепочки. Если нет, то ничего не изменится.
	Кроме этого есть следующие режимы:
	- отображение команд;
	- отображение памяти;
	- отображение ссылок;
	- отображение вектора.

			  11. ОТОБРАЖЕНИЕ КОМАНД

	В  памяти  отображаются  команды  в  реассемблированном  виде.
Управление   перемещением  экрана  осуществляется  с  помощью	клавиш
управления  курсором.  Если  Анализатор  начнёт отображение  команд  с
неверного адреса, то в поле code нужно набрать требуемый  начальный
адрес и передвинуть курсор вправо.  В режиме отображения команд  можно
устанавливать постоянные контрольные точки,  нажав клавишу <Enter>,  и
удалять  - нажать  клавишу  <DEL>.  По  достижении  контрольной  точки
выводится  отчёт .  Постоянные контрольные точки действуют до тех пор,
пока   они  не	будут  удалены с помощью клавиши  <DEL> или  пока
пользователь  не  изменит  область  их	размещения  (загрузит	другую
программу).  Анализатор   запрещает  ставить  контрольную  точку   на
однобайтовой  команде и не разрешает иметь более 10 контрольных точек.
Контрольные  точки бесполезны вПЗУ  (ROM),  т.к.  Анализатор	помещает
ключевое прерывание в каждой контрольной точке. В качестве меры защиты
некоторые  программы выявляют контрольные точки с помощью  контрольной
суммы.
     В Анализаторе изменена мнемоника команд. Вместо WORD PTR или BYTE
PTR,	используемых в INTEL,  Анализатор записывает w или b.  Например,
запись	 MOVE	 BYTE	PTR[17],45  в	 Анализаторе   будет   выглядеть
move,b[17],45.  Префикс  rep представляется в виде отдельной  команды.
Префиксы сегмента объединяются с последующей командой, например,  move
ax,[cs:bx+12].	Jump,  call  и ret используется в INTEL как	отдельные
команды.  В  Анализаторе  jump,  call и ret используются для	коротких
переходов,  внутри одного и того же сегмента и jumpf, callf и retf для
дальних  переходов,   в  другой  сегмент.   Ret  и  Retf,  выполняющие
добавление константы в стек,  содержат значение этой константы в  виде
операнда.

			  12. ОТОБРАЖЕНИЕ ПАМЯТИ

     Для  того,  чтобы	увидеть отображение  памяти,  сдвиньте	курсор
вправо	от  отметки data.  Память может отображаться в одном	из  трёх
форматов:
     - символьном (слева направо);
     - 16-ричные арабские (справа налево);
     - 16-ричные римские (слева направо).
     Переключение форматов осуществляется с помощью клавиши <+>.
     Для  изменения содержимого памяти нужно нажать клавишу <Enter>  и
набрать  требуемый символ.  В случае опасной ситуации курсор  начинает
мигать.  Пользователь осуществляет ввод непосредственно в  память,  не
имея  возможности исправлять введённые символы.  Если пользователь  по
ошибке	сделает  попытку ввода данных в критическую  область,  то  ЭВМ
немедленно прекратит работу.
     При работе в этом режиме можно прогнать программу пользователя до
заданных  изменений в памяти. Для этого нужно указать требуемый байт в
памяти	и  нажать <Alt><F9>.	На экране  появится  отображение  команд
программы, расположенных сразу после изменённых байтов.  В этом режиме
используется пошаговое выполнение, но т.к. некоторые операции процес-
сора отменяют пошаговое выполнение, то в этом случае следует добраться
до проблемной области  другими	методами,  а  затем  нажать  <Alt><F9>
(см.  пошаговое выполнение).

			  13. ОТОБРАЖЕНИЕ ССЫЛОК

     Этот режим отображает все ссылки на заданный код.	Для перехода в
режим отображения ссылок нужно набрать <R> в режиме отображения команд
или  отображения регистра.  Ссылки включают короткие  переходы	(Short
Jumps) в пределах 128 байтов, средние переходы (Near Jumps) и  вызовы
подпрограмм в текущем сегменте, а также межсегментные вызовы в области
памяти.
     Это  возможно  только  внутри  текущего  сегмента.  а  ссылки  по
переходам в другие сегменты не отображаются Анализатором.


			 14. ОТОБРАЖЕНИЕ ВЕКТОРОВ

     На   экран  выводятся  вектора  прерываний  и  внутренние	записи
Анализатора  (proxies).  Т.к.  их количество велико,	то все их  можно
увидеть, пользуясь клавишами передвижения курсора <Home><End>.
     Для каждого вектора прерывания отображается следующая информация:
     - номер прерывания или номер внутренней записи в 16-ричном  виде.
       Перед внутренней записью ставится x;
     - сопутствующее   прерывание   или   внутренняя   запись.	 При
       трассировке  прерывания	объединяются  прерывание  и  внутренняя
       запись. В этом поле отображается внутренняя запись;
     - тип. Активен при трассировке прерываний;
     - содержимое  вектора.  Для  прерываний - это  значение,  которое
должно было бы содержаться в векторе без трассировки.  Для  внутренних
записей - это адрес,  по которому следовало бы передать управление без
внутренней записи Анализатора;
     - первоначальное значение вектора, отличное от текущего значения.
При  запуске  Анализатора каждое первоначальное значение  записывается
для возможности такого сравнения;
     - только  для прерываний 8-f записываются биты IMR,  IRR  и  ISR;
     - имя  прерывания.  Эти имена поступают из различных источников и
включают  специализированные прерывания,  используемые в  определённых
машинах семейства IBM, например, PCjr или PC AT.
     Режим отображения векторов управляет трассировкой.
Для вызова трассировки передвиньте курсор на прерывание (interrupt)  и
нажмите клавишу <Enter>, подключив соответствующую сопутствующую
запись.

			   15. ТИПЫ ПРЕРЫВАНИЙ

     Существует два типа прерываний в дополнение к пустому (отмена).
     15.1. Трассировка (patched). Это запрос на трассировку. Сопутст-
вующая	внутренняя  запись определяет тип трассировки (она вводится  с
помощью  клавиши  <Enter>,  для отмены  используется	клавиша  <Del>).
Отмена трассировки никогда не приводит к осложнениям.

     15.2. Ключевое прерывание (key). Это прерывание используется для
контрольных точек.  Имеется только одно прерывание этого типа. Для его
перемещения захватите его с помощью клавиши <Enter>, передвиньте куда-
нибудь	курсором вверх или вниз и закрепите с помощью клавиши <Enter>.
После этого Анализатор при использовании постоянных контрольных  точек
или  при  нажатии клавиш <Alt><F9> временно вставит команду  генерации
ключевого прерывания в программу пользователя и удалит эту команду пе-
ред  следующим	входом.  При работе с "нормальной"  программой  лучшим
ключевым прерыванием является прерывание 3, потому что команда для его
вызова имеет длину, равную только байту.
     Многие  программы содержат средства,  предотвращающие возможность
трассировки.  К  числу	таких средств относится изменение  содержимого
векторов 1 и 3. Для трассировки таких программ можно изменить ключевое
прерывание на что-то другое.
     Следует соблюдать осторожность при трассировке однобайтных команд
с  помощью всех ключевых прерываний,  кроме прерывания	3.  Анализатор
изменяет в программе пользователя за один раз два байта.  Если	второй
байт  используется  как  данные  или  метка  перехода,	то  программа
пользователя даст сбой.

		       16. ТИПЫ ВНУТРЕННИХ ЗАПИСЕЙ

     Тип  внутренней  записи  опеделяет  вид  действия,  определяемого
Анализатором   при  трассировке  прерывания,.	Для  изменения	 типа
аналитической	записи	нужно  передвинуть  курсор  на	одну  линию  с
внутренней  записью,  а  затем нажать клавишу  <+>  или  <->.  Имеются
следующие типы внутренних записей:
     - In/Out.  Анализатор  выводит  отчёт  перед и  после  выполнения
функции  прерывания.  Прерывание выполняется нормально	за  иключением
того,	что   после  возврата  стек  указывает	на  внутреннюю	запись
Анализатора return.
     - In. Анализатор выводит отчёт перед входом в функцию прерывания.
После  вывода отчёта управление передаётся функции прерывания,	и  она
выполняется  как  обычно (с обыччным стеком).  Это  наиболее  надёжная
эмуляция прерывания, а во многих случаях единственно возможная.
     - Out.	Анализатор   выводит  отчёт  по  завершению   выполнения
функции прерывания (см. In/Out).
     - Run.  Относится только к запросу функции DOS на прерывание 21h.
Анализатор  выдаёт  отчёт  о программах com и	exe  перед  выполнением
первой команды.
     - Trojan.  Относится  только  к	запросу  дисковой  функции  13h.
Анализатор  выводит  отчёт о любой попытке внести изменение  на  диск.
Если нужно получать эту информацию перед внесением изменения,  нажмите
клавишу   <Enter>  после  получения  отчёта  (в   режиме   отображения
трассировки).
     Анализатор  проверяет при каждом появлении прерывания  содержимое
регистров.  Попытка внесения изменения на жёсткий диск характеризуется
следующими значениями регистров:
     DL>=128, AH=3 (запись), AH=5 (формат) или AH=11 (длинная запись).
Вызовы	 функций,   не	изменяющих  содержимое	диска,	 проходят  без
вмешательства Анализатора.
     SysReq.	Относится  только к прерыванию	15h.  Анализатор  выдаёт
отчёт о нажатии клавиши SysReq на персональной ЭВМ AT.  Эта функция не
работает на COMPAQ 286,  потому что она выдаёт прерывание SysReq перед
передачей EOL контроллеру прерываний.
     Silent.	Анализатор  формирует записи при трассировке прерывания,
но не выдаёт о них отчёта.  Внутренняя запись Silent полезна для таких
прерываний   (например,   клавиатуры),	 которые  используются	 самим
Анализатором. Выполнение происходит так же, как и в In/Out, но в конце
вместо внутренней записи return используется revert.
     Pass.  Анализатор выполняет трассируемое прерывание без	отчётов.
Если программа, подобная SideKick, изменит трассируемое прерывание, то
она  сохранит  внутреннюю запись Анализатора и обращения к  ней  будут
выполняться  бесконечно.  Единственным	средством отключения отчёта  в
таком случае является задание типа Pass.
     Stop.   Анализатор  предоставляет  отчёт  о  прерывании,   но  не
выполняет  прерывание,	и  очередной выход  в  программу  пользователя
выполняется   на  команду,   следующую	за  вызовом  прерывания.   Эта
внутренняя  запись  Анализатора  обычно используется  по  отношению  к
прерыванию  5 (печать экрана).	После этого можно вызывать  Анализатор
нажатием клавиш <Shift><PrtSc>, не затрагивая печать.
     Существует  ещё  один тип внутренних  записей.  Они  используются
самим  Анализатором и не задаются пользователем.  Это  так  называемые
"висящие" внутренние записи.
     Call.  Создаётся  при  входе  в трассируемое прерывание	с  типом
внутренней  записи  In/Out.	При  выходе  в	программу   пользователя
Анализатор  удаляет вызов и симулирует вход в функцию  прерывания,  но
адрес внутренней записи return соответствует адресу возврата.
     Enter.  Создаётся  при входе в прерывание,  трассируемое с  типом
внутренней  записи In.  При выходе в программу пользователя Анализатор
симулирует  вход  в функцию прерывания и отменяет  внутреннюю  запись.
Если при выводе отчёта пользователь отменит внутреннюю запись call или
enter, то это будет эквивалентно наличию внутренней записи stop.
     Return.	Создаётся  при передаче управления функции прерывания  в
тех  случаях,  когда  требуется отчёт после прерывания	(тип  Out  или
In/Out).  Адрес внутренней записи подставляется вместо адреса возврата
в   стек.    После   возврата	из   функции   прерывания   Анализатор
восстанавливает  регистры cs:ip и аннулирует внутреннюю запись return.
Стек  с  внутренней  записью  return	отличается  от	 первоначального
состояния  стека,  поэтому  внутренние	записи out и in/out  не  могут
использоваться	для  прерываний,  содержащих значение cs/ip  в  стеке.
Иногда	возврат  не  происходит,  и  тогда  внутренняя	запись	return
остаётся на бесконечно продолжительное время.  В этом случае её  нужно
удалить   вручную.   Будьте  внимательны,   т.к.   если  в  дальнейшем
потребуется   выход   в   программу   пользователя,   то   понадобится
перезагрузка ЭВМ.
     revert. Похоже на return, но т.к. revert  используется  с
внутренней записью silent, вывод отчёта не производится.
     load.  Используется  Анализатором при наличии  внутренней  записи
run. Её отмена вызывает ошибки.

			 17. ТРАССИРОВКА ЗАГРУЗКИ

     С	помощью Анализатора можно проследить,  что происходит во время
загрузки.
     - Найдите	 дискету  сформатированную  в  DOS  без   режима   /S.
Установите  её	на  дисководе a:  и  нажмите Ctrl_Alt_Del.  На  экране
появится сообщение Non_System disk or disk error (Несистемный диск или
сбой диска).
     - Вернитесь на подсказку DOS и запустите Анализатор.
     - В  режиме  отображения  вектора	(F3)	убедитесь,  что  вектора
прерываний    05    и	08-1F  содержат   первоначальные    значения,
устанавливаемые BIOS.  Для DOS 2,  3.0 и 3.1 можно не  восстанавливать
вектора 0F, 13 или 19, а на AT не требуется восстанавливать вектор 1E.
Для DOS 3.2 не требуется восстанавливать ни одного вектора.
      - Нажатием  клавиши <Esc> вызовите меню,  передвиньте курсор  на
Conceal  (Скрыть)  и нажмите клавишу <Enter>.  Вновь появится  меню  с
другими  режимами.  Анализатор	переместился в верхнюю часть памяти  и
изменил слово размера памяти так, чтобы находиться за пределами памяти
доступной системе.  Поскольку Анализатор начинает работу  сначала,  то
все  его  переменные устанавливаются в начальное  значение  (например,
цвета экрана).
     - В  режиме отображения векторов протрассируйте прерывание печати
экрана (<F3>, курсор вниз на 5 строку (int 5), <Enter>).
     - Установите  несистемную	дискету  на  дисковод  a:  и  закройте
крышку. В меню вызовите функцию Boot (Загрузка), нажав <Esc>, кур-
сор вниз на Boot, <Enter>.
     - После  того,  как появится сообщение "Non-system disk  or  disk
error"  (несистемный  диск  или сбой диска), Анализатор  переустановит
значения  старых векторов прерываний для того,	чтобы они не указывали
на  область  памяти  ROM и чтобы  появилась  возможность  использовать
вектора 8, 9, 10 и 16 в своих внутренних операциях .
     - Теперь протрассируйте нужные прерывания,  например,  прерывание
13h - курсор вниз на 13 строку (int 13), <Enter>.
     - В  меню	снова  выберите  Boot (<Esc>,	курсор	вниз  на  Boot,
<Enter>).
     - Продолжить трассировку можно нажатием клавиши <Enter> из режима
трассировки. Выполнив загрузку описанным способом, в дальнейшем можно
повторять её уже не пользуясь несистемной дискетой (если  пользователь
не нарушил целостность Анализатора).

		      18. ТРУДНОДОСТУПНЫЕ ПРЕРЫВАНИЯ

     Трассировка    некоторых	прерываний   связана   со   следующими
трудностями:
     18.1. Клавиатура (9). Используется с внутренней записью out или
silout. При выходе в программу пользователя нажмите <Shift><Enter>.
Анализатор не передаст управление до тех пор, пока не будет отпущена
клавиша  <Shift>.  Это устраняет выполнение бесполезного прерывания,
сигнализирующего об отпуске клавиши <Enter>.	Прерывание 9  -
единственное прерывание,  в котором клавиша <Shift> (а также	<Ctrl> и
<Alt>) имеет это значение.
     18.2. Асинхронные прерывания (8-0F и 70-77 на AT). Эти прерывания
устанавливают  флажок (ISR) регистра прерываний,  что запрещает  далее
выполнить прерывания того же или более низкого приоритета до  тех пор,
пока функция прерывания не выдаст EOL.  Если требуется отчёт перед  их
выполнением,  то  в  этом случае устанавливается ISR,  и ЭВМ не  будет
работать. Запрещается использовать типы внутренних записей In и In/Out
(можно пользоваться out или silent).
     18.3.  Таймер	(1Ch).	Анализатор  не	может  вмешиваться  в  это
прерывание.  Функция  прерывания  таймера BIOS вызовет	таймер	(Timer
tick)	перед  тем,  как  передать команду EOL  контроллеру  прерываний
(8259А).  При  получении  отчёта  для этого прерывания	до  или  после
выполнения,   ISR  будет  установлен	в  контроллере	прерываний,  что
приведёт  к запрещению прерываний от клавиатуры и сделает  невозможной
работу Анализатора.

			      19. ПРИМЕЧАНИЯ

     Анализатор  в  своих  внутренних  функциях  использует  следующие
прерывания:
     1h  - пошаговое выполнение;
     3h  - ключевые (контрольные точки) - (или любой другой  номер);
     8h  - таймер;
     9h  - клавиатура;
     10h - видео;
     11h - оборудование;
     12h - таймер;
     16h - клавиатура;
     19h - загрузка (только во время загрузки);
     21h - функции DOS (только при наличии типа run).
     Используются  ещё некоторые другие функции при запуске из DOS или
выходе в DOS.
     Для  прерываний  1  и ключевых  по  выполнении  восстанавливаются
значения,  установленные пользователем. В прерываниях 8 и 9 Анализатор
загружает   их	 первоначальные  значения   (имевшиеся	 при   запуске
Анализатора) и временно перезагружает прерывания 10h и 16h (всякий раз
при использовании им прмсваиваются первоначальные значения).
Прерывания  11h  и  12h  используются только по  разу  при  выполнении
загрузки во временную память (или скрытую) и нигде больше.  Анализатор
не  защищает себя от возможного искажения векторов 19h	или  21h.  При
просмотре памяти с помощью Анализатора можно обнаружить,  что значения
векторов 8 и 9 отличаются от значений, содержащихся в поле отображения
вектора, но значения остальных векторов идентичны этому отображению.

			 20. ПОШАГОВОЕ ВЫПОЛНЕНИЕ

     Пошаговое	выполнение  вызывается нажатием <F8> <F10>  в  режимме
отображения  памяти или по запросу из меню.  Некоторые процессы  могут
вызвать отмену пошагового выполнения.
