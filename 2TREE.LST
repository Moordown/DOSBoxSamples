Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 1
2tree.ASM



      1					 include macro.asm
1     2					 load macro args
1     3					     irp d,<args>
1     4						 push d
1     5					     endm
1     6					 endm
1     7
1     8					 restore macro args
1     9					     irp d,<args>
1    10						 pop d
1    11					     endm
1    12					 endm
1    13
1    14					 exit macro
1    15					     mov ah, 00h
1    16					     int 21h
1    17					 endm
1    18
1    19					 print macro buf
1    20						 mov ah, 09h
1    21						 mov dx, buf
1    22						 int 21h
1    23					 endm
1    24
1    25					 print_range macro args
1    26					     irp d,<args>
1    27						 print <offset d>
1    28					     endm
1    29					 endm
1    30
1    31					 get_offset macro state
1    32					     xor dx, dx
1    33					     xor ax, ax
1    34					     mov al, state
1    35					     shl ax, 8
1    36					 endm get_offset
1    37
1    38					 to_non_space macro addr
1    39					     local l1, l2
1    40					     mov si, addr
1    41					 l1:
1    42					     mov byte ptr al, [si]
1    43					     cmp al, 20h
1    44					     je	l2
1    45					     cmp al, 0
1    46					     je	l2
1    47					     inc si
1    48					     jmp l1
1    49					 l2:
1    50					     inc si
1    51					     mov ax, si
1    52					 endm
1    53
1    54					 set_transition	macro buf, from, to, char
1    55					     load<bx, dx>
1    56					     get_offset	from
1    57
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 2
2tree.ASM



1    58					     add ax, offset buf
1    59					     add ax, char
1    60
1    61					     mov bx, ax
1    62					     mov byte ptr [bx],	to
1    63					     restore<dx, bx>
1    64					 endm
1    65
1    66					 set_transition_length_from_start macro	buf, from, to, start, iterations
1    67					     local l1, end
1    68					     mov bx, start
1    69					     mov cx, iterations
1    70					 l1:
1    71					     cmp cx, 0
1    72					     je	end
1    73
1    74					     load <bx,cx>
1    75					     set_transition buf	from to	bx
1    76					     restore <cx,bx>
1    77
1    78					     inc bx
1    79					     dec cx
1    80					     jmp l1
1    81					 end:
1    82					 endm
1    83
1    84					 set_zero macro	state
1    85					     mov al, 0
1    86					     mov byte ptr [state], al
1    87					 endm
1    88
1    89					 set_transition_for_all	macro buf, from, to
1    90					     set_transition_length_from_start buf, from, to, 0,	255
1    91					 endm
1    92
1    93					 set_transition_for_digits macro buf, from, to
1    94					     set_transition_length_from_start buf, from, to, 30, 10
1    95					 endm
1    96
1    97					 set_transition_for_letters macro buf, from, to
1    98					     set_transition_length_from_start buf, from, to, 97, 26
1    99					     set_transition_length_from_start buf, from, to, 65, 26
1   100					 endm
1   101
1   102					 get_transition	macro buf, from, char
1   103					     load <dx>
1   104					     get_offset	from
1   105					     restore <dx>
1   106
1   107					     add ax, offset buf
1   108					     add ax, char
1   109
1   110					     mov bx, ax
1   111					     xor ax, ax
1   112					     mov al, byte ptr [bx]
1   113					 endm
1   114
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 3
2tree.ASM



1   115					 put macro from, to, position
1   116					     xor dx, dx
1   117					     xor bx, bx
1   118
1   119					     mov dx, offset to
1   120					     mov bl, byte ptr [position]
1   121					     add dx, bx
1   122
1   123					     mov bl, byte ptr [from]
1   124					     mov byte ptr [edx], bl
1   125					     inc [position]
1   126					 endm
1   127
1   128					 clear_mes macro mes, lastidx
1   129					     local l1, end
1   130					     mov bx, offset mes
1   131					     mov cl, byte ptr [lastidx]
1   132					     inc cl
1   133					 l1:
1   134					     cmp cl, 0
1   135					     je	end
1   136					     mov byte ptr [bx],	'$'
1   137					     inc bx
1   138					     dec cl
1   139					     jmp l1
1   140					 end:
1   141					     mov bl, 0
1   142					     mov byte ptr [lastidx], bl
1   143					 endm
    144
    145	    0000			 model tiny
    146					 .386
    147	    0000			 .code
    148					 org 100h
    149	    0100			 start:
    150	    0100  E8 0207		     call save_cwd
    151	    0103  B9 0000		     mov cx, 0
    152	    0106  51			     push cx
    153	    0107  E8 01E8		     call set_dta
    154	    010A  E8 00FC		     call parse_command_line
    155
    156					     ;
    157					     ;	 start tree
    158					     ;
    159	    010D  B8 042Fr		     mov ax, offset root_folder
    160	    0110  B9 0000		     mov cx, 0
    161	    0113  51			     push cx
    162	    0114  50			     push ax
    163	    0115  E8 000B		     call list_subfiles_recursive_from
    164
    165					     ;
    166					     ;	 cd to start folder
    167					     ;
    168	    0118  B8 03EFr		     mov ax, offset working_folder
    169	    011B  50			     push ax
    170	    011C  E8 01B8		     call cd
    171					     exit
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 4
2tree.ASM



1   172	    011F  B4 00			     mov ah, 00h
1   173	    0121  CD 21			     int 21h
    174
    175	    0123			 list_subfiles_recursive_from:
    176	    0123  5B			     pop bx	 ; ret address
    177	    0124  58			     pop ax	 ; deep	level
    178	    0125  59			     pop cx	 ; root	folder offset
    179	    0126  53			     push bx
    180					     load <cx>
2   181	    0127  51				 push cx
    182	    0128  50			     push ax
    183	    0129  E8 01AB		     call cd
    184					     restore <cx>
2   185	    012C  59				 pop cx
    186
    187					     ;
    188					     ; list subfolder
    189					     ;
    190	    012D  B8 03D9r		     mov ax, offset folder_mask
    191					     load <cx>
2   192	    0130  51				 push cx
    193	    0131  50			     push ax
    194	    0132  51			     push cx
    195	    0133  E8 000C		     call list_subfiles_recursive
    196					     restore <cx>
2   197	    0136  59				 pop cx
    198
    199					     ;
    200					     ; list files
    201					     ;
    202	    0137  B8 03D3r		     mov ax, offset file_mask
    203					     load <cx>
2   204	    013A  51				 push cx
    205	    013B  50			     push ax
    206	    013C  51			     push cx
    207	    013D  E8 0002		     call list_subfiles_recursive
    208					     restore <cx>
2   209	    0140  59				 pop cx
    210	    0141  C3			     ret
    211
    212	    0142			 list_subfiles_recursive:
    213					     ;
    214					     ;	 save current files
    215					     ;
    216	    0142  E8 0218		     call count_subfiles_here
    217	    0145  A3 03D0r		     mov word ptr [current_max_entities], ax
    218
    219	    0148  5B			     pop bx
    220	    0149  59			     pop cx ; deep level
    221	    014A  58			     pop ax ; filemask offset
    222	    014B  53			     push bx
    223
    224					     load <cx, ax>
2   225	    014C  51				 push cx
2   226	    014D  50				 push ax
    227	    014E  51			     push cx
    228	    014F  E8 01A0		     call set_dta
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 5
2tree.ASM



    229					     restore <ax, cx>
2   230	    0152  58				 pop ax
2   231	    0153  59				 pop cx
    232
    233					     load <cx>
2   234	    0154  51				 push cx
    235	    0155  50			     push ax
    236	    0156  E8 00F2		     call find_first
    237	    0159  73 05			     jnc _list_subfiles_recursive_loop
    238	    015B  E8 008A		     call find_first_error
    239	    015E  EB 5D			     jmp _list_subfiles_recursive_end
    240	    0160			 _list_subfiles_recursive_loop:
    241					     restore <cx>
2   242	    0160  59				 pop cx
    243					     load <cx>
2   244	    0161  51				 push cx
    245	    0162  B8 0000		     mov ax, 0
    246	    0165  50			     push ax
    247	    0166  51			     push cx
    248	    0167  E8 00EE		     call show_filename_from_dta
    249	    016A  3D 0001		     cmp ax, 1
    250	    016D  75 43			     jne _list_subfiles_recursive_next
    251
    252					     ;
    253					     ;	 check if folder
    254					     ;
    255	    016F  E8 005F		     call is_folder
    256	    0172  3D 0001		     cmp ax, 1
    257	    0175  75 3B			     jne _list_subfiles_recursive_next
    258
    259					     ;
    260					     ;	 check deep level
    261					     ;
    262					     restore <cx>
2   263	    0177  59				 pop cx
    264					     load <cx>
2   265	    0178  51				 push cx
    266	    0179  33 DB			     xor bx, bx
    267	    017B  8A 1E	03D2r		     mov bl, byte ptr [deep_level]
    268	    017F  3B CB			     cmp cx, bx
    269	    0181  7D 2F			     jge _list_subfiles_recursive_next
    270
    271					     ;
    272					     ; start new search
    273					     ;
    274
    275					     ;
    276					     ;	 cd to subfolder
    277					     ;
    278					     load <cx>
2   279	    0183  51				 push cx
    280	    0184  51			     push cx
    281	    0185  E8 0037		     call move_dta
    282	    0188  05 001E		     add ax, 1Eh
    283
    284	    018B  50			     push ax
    285	    018C  E8 0148		     call cd
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 6
2tree.ASM



    286					     restore <cx>
2   287	    018F  59				 pop cx
    288
    289	    0190  41			     inc cx
    290					     ;
    291					     ;	 list subfiles from subfolder
    292					     ;
    293					     load <cx>
2   294	    0191  51				 push cx
    295	    0192  B8 03D9r		     mov ax, offset folder_mask
    296	    0195  50			     push ax
    297	    0196  51			     push cx
    298	    0197  E8 FFA8		     call list_subfiles_recursive
    299					     restore <cx>
2   300	    019A  59				 pop cx
    301
    302
    303					     ;
    304					     ;	 list subfolders from subfolder
    305					     ;
    306					     load <cx>
2   307	    019B  51				 push cx
    308	    019C  B8 03D3r		     mov ax, offset file_mask
    309	    019F  50			     push ax
    310	    01A0  51			     push cx
    311	    01A1  E8 FF9E		     call list_subfiles_recursive
    312					     restore <cx>
2   313	    01A4  59				 pop cx
    314
    315
    316					     ;
    317					     ;	 cd back to this function
    318					     ;
    319	    01A5  B8 03ECr		     mov ax, offset parent_folder
    320	    01A8  50			     push ax
    321	    01A9  E8 012B		     call cd
    322
    323					     restore <cx>
2   324	    01AC  59				 pop cx
    325					     load <cx>
2   326	    01AD  51				 push cx
    327	    01AE  51			     push cx
    328	    01AF  E8 0140		     call set_dta
    329	    01B2			 _list_subfiles_recursive_next:
    330	    01B2  E8 0091		     call find_next
    331	    01B5  73 A9			     jnc _list_subfiles_recursive_loop
    332	    01B7  3A 06	037Fr		     cmp al, byte ptr [no_more_files]
    333	    01BB  75 3A			     jne find_next_error
    334	    01BD			 _list_subfiles_recursive_end:
    335					     restore <cx>
2   336	    01BD  59				 pop cx
    337	    01BE  C3			     ret
    338	    01BF			 move_dta:
    339	    01BF  5B			     pop bx
    340	    01C0  59			     pop cx
    341	    01C1  53			     push bx
    342
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 7
2tree.ASM



    343	    01C2  33 C0			     xor ax, ax
    344	    01C4  A0 0380r		     mov al, byte ptr [dta_len]
    345	    01C7  F7 E1			     mul cx
    346
    347	    01C9  BB 04B1r		     mov bx, offset dta
    348	    01CC  03 D8			     add bx, ax
    349	    01CE  8B C3			     mov ax, bx
    350	    01D0  C3			     ret
    351	    01D1			 is_folder:
    352	    01D1  BB 04C6r		     mov bx, offset dta	+ 15h
    353	    01D4  8A 1F			     mov bl, byte ptr [bx]
    354	    01D6  80 FB	10		     cmp bl, 10h
    355	    01D9  74 02			     je	_is_folder_true
    356	    01DB  75 05			     jne _is_folder_false
    357	    01DD			 _is_folder_true:
    358	    01DD  B8 0001		     mov ax, 1
    359	    01E0  EB 05			     jmp _is_folder_end
    360	    01E2			 _is_folder_false:
    361	    01E2  B8 0000		     mov ax, 0
    362	    01E5  EB 00			     jmp _is_folder_end
    363	    01E7			 _is_folder_end:
    364	    01E7  C3			     ret
    365
    366
    367
    368	    01E8			 find_first_error:
    369					     print_range <find_first_fails, newline>
2   370						 print <offset find_first_fails>
3   371	    01E8  B4 09				 mov ah, 09h
3   372	    01EA  BA 0399r			 mov dx, offset	find_first_fails
3   373	    01ED  CD 21				 int 21h
2   374						 print <offset newline>
3   375	    01EF  B4 09				 mov ah, 09h
3   376	    01F1  BA 04AFr			 mov dx, offset	newline
3   377	    01F4  CD 21				 int 21h
    378	    01F6  C3			     ret
    379	    01F7			 find_next_error:
    380					     print_range <find_next_fails, newline>
2   381						 print <offset find_next_fails>
3   382	    01F7  B4 09				 mov ah, 09h
3   383	    01F9  BA 03B5r			 mov dx, offset	find_next_fails
3   384	    01FC  CD 21				 int 21h
2   385						 print <offset newline>
3   386	    01FE  B4 09				 mov ah, 09h
3   387	    0200  BA 04AFr			 mov dx, offset	newline
3   388	    0203  CD 21				 int 21h
    389					     exit
1   390	    0205  B4 00			     mov ah, 00h
1   391	    0207  CD 21			     int 21h
    392
    393	    0209			 parse_command_line:
    394					     ;
    395					     ; prepare root folder
    396					     ;
    397	    0209  BE 0082		     mov si, 82h
    398	    020C  B9 0040		     mov cx, 64
    399	    020F  51			     push cx
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 8
2tree.ASM



    400	    0210  56			     push si
    401	    0211  E8 012A		     call count_no_space_no_zero_letters
    402	    0214  8B C8			     mov cx, ax
    403	    0216  BE 0082		     mov si, 82h
    404	    0219  BF 042Fr		     mov di, offset root_folder
    405	    021C  F3> A4		     rep movsb
    406
    407	    021E			 parse_args:
    408	    021E  46			     inc si
    409	    021F  46			     inc si
    410	    0220  80 3C	64		     cmp byte ptr [si],	'd'
    411	    0223  74 07			     je	parse_d
    412	    0225  80 3C	66		     cmp byte ptr [si],	'f'
    413	    0228  74 0F			     je	parse_f
    414	    022A  EB 19			     jmp parse_end
    415	    022C			 parse_d:
    416					     ;
    417					     ; parse_deep level
    418					     ;
    419	    022C  46			     inc si
    420	    022D  46			     inc si
    421	    022E  8A 1C			     mov bl, byte ptr [si]
    422	    0230  80 EB	30		     sub bl, 30h	     ; to number
    423	    0233  88 1E	03D2r		     mov byte ptr [deep_level],	bl
    424	    0237  EB E5			     jmp parse_args
    425	    0239			 parse_f:
    426					     ;
    427					     ; parse file extension
    428					     ;
    429	    0239  46			     inc si
    430	    023A  46			     inc si
    431	    023B  BF 03D4r		     mov di, offset file_ext
    432	    023E  B9 0004		     mov cx, 4
    433	    0241  F3> A4		     rep movsb
    434	    0243  EB D9			     jmp parse_args
    435	    0245			 parse_end:
    436	    0245  C3			     ret
    437	    0246			 find_next:
    438	    0246  B4 4F			     mov ah, 4Fh
    439	    0248  CD 21			     int 21h
    440
    441	    024A  C3			     ret
    442
    443	    024B			 find_first:
    444	    024B  5B			     pop bx
    445	    024C  5A			     pop dx		 ; filename spec
    446	    024D  B9 0010		     mov cx, 10h	 ; include directories
    447	    0250  53			     push bx
    448
    449	    0251  33 C0			     xor ax, ax
    450	    0253  B4 4E			     mov ah, 4Eh
    451	    0255  CD 21			     int 21h
    452	    0257  C3			     ret
    453	    0258			 show_filename_from_dta:
    454	    0258  5B			     pop bx
    455	    0259  59			     pop cx  ; deep level
    456	    025A  58			     pop ax  ; entity count
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 9
2tree.ASM



    457	    025B  53			     push bx
    458
    459					     load <ax, cx>
2   460	    025C  50				 push ax
2   461	    025D  51				 push cx
    462	    025E  51			     push cx
    463	    025F  E8 FF5D		     call move_dta
    464
    465	    0262  05 001E		     add ax, 1Eh
    466	    0265  8B D8			     mov bx, ax
    467	    0267  80 3F	2E		     cmp byte ptr [bx],	'.'
    468	    026A  75 06			     jne _show_filename_from_dta_valid_name
    469					     restore <cx, ax>
2   470	    026C  59				 pop cx
2   471	    026D  58				 pop ax
    472	    026E  B8 0000		     mov ax, 0
    473	    0271  C3			     ret
    474	    0272			 _show_filename_from_dta_valid_name:
    475					     ;
    476					     ;	 pseudo	graphic	prefix
    477					     ;
    478					     restore <cx, ax>
2   479	    0272  59				 pop cx
2   480	    0273  58				 pop ax
    481
    482					     load <cx, bx>
2   483	    0274  51				 push cx
2   484	    0275  53				 push bx
    485	    0276  50			     push ax	 ; entity count
    486	    0277  51			     push cx	 ; deep	level
    487	    0278  E8 001E		     call print_pseudographic_prefix
    488					     restore <bx, cx>
2   489	    027B  5B				 pop bx
2   490	    027C  59				 pop cx
    491
    492					     load <bx>
2   493	    027D  53				 push bx
    494	    027E  B9 000D		     mov cx, 13
    495	    0281  51			     push cx
    496	    0282  53			     push bx
    497	    0283  E8 00B8		     call count_no_space_no_zero_letters
    498	    0286  8B C8			     mov cx, ax
    499					     restore <bx>
2   500	    0288  5B				 pop bx
    501					     ; mov ax, offset dta + 1Eh
    502	    0289  51			     push cx
    503	    028A  53			     push bx
    504	    028B  E8 009A		     call print_string_with_length
    505					     print_range <newline>
2   506						 print <offset newline>
3   507	    028E  B4 09				 mov ah, 09h
3   508	    0290  BA 04AFr			 mov dx, offset	newline
3   509	    0293  CD 21				 int 21h
    510	    0295  B8 0001		     mov ax, 1
    511	    0298  C3			     ret
    512	    0299			 print_pseudographic_prefix:
    513	    0299  5B			     pop bx
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 10
2tree.ASM



    514	    029A  59			     pop cx	 ; deep	level
    515	    029B  58			     pop ax	 ; entity count
    516	    029C  53			     push bx
    517
    518	    029D  83 F9	00		     cmp cx, 0
    519	    02A0  74 0C			     je	_print_pseudographic_prefix_zero_level
    520	    02A2			 _print_pseudographic_prefix_loop:
    521					     print_range <level_shift>
2   522						 print <offset level_shift>
3   523	    02A2  B4 09				 mov ah, 09h
3   524	    02A4  BA 03DFr			 mov dx, offset	level_shift
3   525	    02A7  CD 21				 int 21h
    526	    02A9  49			     dec cx
    527	    02AA  0F 85	0080		     jnz _print_string_with_length_loop
    528	    02AE			 _print_pseudographic_prefix_zero_level:
    529	    02AE  3B 06	03D0r		     cmp ax, word ptr [current_max_entities]
    530	    02B2  74 19			     je	_print_pseudographic_prefix_zero_level_end
    531	    02B4  3D 0000		     cmp ax, 0
    532	    02B7  74 02			     je	_print_pseudographic_prefix_zero_level_first
    533	    02B9  EB 09			     jmp _print_pseudographic_prefix_zero_level_middle
    534	    02BB			 _print_pseudographic_prefix_zero_level_first:
    535					     print_range <no_zero_level_first_file>
2   536						 print <offset no_zero_level_first_file>
3   537	    02BB  B4 09				 mov ah, 09h
3   538	    02BD  BA 03E6r			 mov dx, offset	no_zero_level_first_file
3   539	    02C0  CD 21				 int 21h
    540	    02C2  EB 12			     jmp _print_pseudographic_prefix_end
    541	    02C4			 _print_pseudographic_prefix_zero_level_middle:
    542					     print_range <no_zero_level_middle_file>
2   543						 print <offset no_zero_level_middle_file>
3   544	    02C4  B4 09				 mov ah, 09h
3   545	    02C6  BA 03E8r			 mov dx, offset	no_zero_level_middle_file
3   546	    02C9  CD 21				 int 21h
    547	    02CB  EB 09			     jmp _print_pseudographic_prefix_end
    548	    02CD			 _print_pseudographic_prefix_zero_level_end:
    549					     print_range <no_zero_level_end_file>
2   550						 print <offset no_zero_level_end_file>
3   551	    02CD  B4 09				 mov ah, 09h
3   552	    02CF  BA 03EAr			 mov dx, offset	no_zero_level_end_file
3   553	    02D2  CD 21				 int 21h
    554	    02D4  EB 00			     jmp _print_pseudographic_prefix_end
    555	    02D6			 _print_pseudographic_prefix_end:
    556	    02D6  C3			     ret
    557	    02D7			 cd:
    558	    02D7  5B			     pop bx ; ret addr
    559	    02D8  5A			     pop dx ; root address
    560	    02D9  53			     push bx ; ret addr
    561
    562	    02DA  33 C0			     xor ax, ax
    563	    02DC  B4 3B			     mov ah, 3Bh
    564	    02DE  CD 21			     int 21h
    565
    566	    02E0  72 01			     jc	cd_error
    567	    02E2  C3			     ret
    568	    02E3			 cd_error:
    569					     print_range <cd_fails, newline>
2   570						 print <offset cd_fails>
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 11
2tree.ASM



3   571	    02E3  B4 09				 mov ah, 09h
3   572	    02E5  BA 0381r			 mov dx, offset	cd_fails
3   573	    02E8  CD 21				 int 21h
2   574						 print <offset newline>
3   575	    02EA  B4 09				 mov ah, 09h
3   576	    02EC  BA 04AFr			 mov dx, offset	newline
3   577	    02EF  CD 21				 int 21h
    578	    02F1  C3			     ret
    579
    580	    02F2			 set_dta:
    581	    02F2  5B			     pop bx
    582	    02F3  59			     pop cx			 ; deep	level
    583	    02F4  53			     push bx
    584
    585	    02F5  BA 04B1r		     mov dx, offset dta
    586					     load <dx>
2   587	    02F8  52				 push dx
    588	    02F9  33 C0			     xor ax, ax
    589	    02FB  A0 0380r		     mov al, byte ptr [dta_len]
    590	    02FE  F7 E1			     mul cx
    591					     restore <dx>
2   592	    0300  5A				 pop dx
    593	    0301  03 D0			     add dx, ax
    594
    595	    0303  33 C0			     xor ax, ax
    596	    0305  B4 1A			     mov ah, 1Ah
    597	    0307  CD 21			     int 21h
    598
    599	    0309  C3			     ret
    600
    601	    030A			 save_cwd:
    602	    030A  BE 03EFr		     mov si, offset working_folder
    603
    604					     ;
    605					     ; save driver
    606					     ;
    607	    030D  B4 19			     mov ah, 19h		 ; GET CURRENT DEFAULT DRIVE
    608	    030F  CD 21			     int 21h
    609	    0311  8A D0			     mov dl, al
    610	    0313  80 C2	41		     add dl, 41h
    611	    0316  88 14			     mov byte ptr [si],	dl
    612	    0318  46			     inc si
    613	    0319  C6 04	3A		     mov byte ptr [si],	':'
    614	    031C  46			     inc si
    615	    031D  C6 04	5C		     mov byte ptr [si],	'\'
    616	    0320  46			     inc si
    617
    618					     ;
    619					     ; save folder
    620					     ;
    621	    0321  32 D2			     xor dl, dl			 ; Actual drive
    622	    0323  B4 47			     mov ah, 47h		 ; CWD - GET CURRENT DIRECTORY
    623	    0325  CD 21			     int 21h
    624	    0327  C3			     ret
    625	    0328			 print_string_with_length:
    626	    0328  5B			     pop bx ; ret address
    627	    0329  5E			     pop si ; string offset
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 12
2tree.ASM



    628	    032A  59			     pop cx ; string length
    629	    032B  53			     push bx; ret address
    630	    032C  33 C0			     xor ax, ax
    631	    032E			 _print_string_with_length_loop:
    632	    032E  B4 02			     mov ah, 02h
    633	    0330  8A 14			     mov dl, byte ptr [si]
    634	    0332  CD 21			     int 21h
    635	    0334  49			     dec cx
    636	    0335  46			     inc si
    637	    0336  83 F9	00		     cmp cx, 00h
    638	    0339  74 02			     je	_print_string_with_length_end
    639	    033B  EB F1			     jmp _print_string_with_length_loop
    640	    033D			 _print_string_with_length_end:
    641	    033D  C3			     ret
    642	    033E			 count_no_space_no_zero_letters:
    643	    033E  5B			     pop bx ; ret address
    644	    033F  5E			     pop si ; string offset
    645	    0340  59			     pop cx ; string length
    646	    0341  53			     push bx ; ret address
    647	    0342  B8 0000		     mov ax, 0
    648	    0345			 _count_non_space_symbols_loop:
    649	    0345  80 3C	20		     cmp byte ptr [si],	20h
    650	    0348  74 12			     je	_count_non_space_symbols_end
    651	    034A  80 3C	0D		     cmp byte ptr [si],	0Dh
    652	    034D  74 0D			     je	_count_non_space_symbols_end
    653	    034F  80 3C	00		     cmp byte ptr [si],	00h
    654	    0352  74 08			     je	_count_non_space_symbols_end
    655	    0354  3B C1			     cmp ax, cx
    656	    0356  74 04			     je	_count_non_space_symbols_end
    657	    0358  40			     inc ax
    658	    0359  46			     inc si
    659	    035A  EB E9			     jmp _count_non_space_symbols_loop
    660	    035C			 _count_non_space_symbols_end:
    661	    035C  C3			     ret
    662	    035D			 count_subfiles_here:
    663	    035D  B9 000B		     mov cx, 11		 ; set pointer to count_dta
    664	    0360  51			     push cx
    665	    0361  E8 FF8E		     call set_dta
    666
    667	    0364  B9 0000		     mov cx, 0
    668					     load <cx>
2   669	    0367  51				 push cx
    670	    0368  B8 03DBr		     mov ax, offset all_files
    671	    036B  50			     push ax
    672	    036C  E8 FEDC		     call find_first
    673	    036F  72 0A			     jc	_count_subfiles_from_end
    674	    0371			 _count_subfiles_from_loop:
    675					     restore <cx>
2   676	    0371  59				 pop cx
    677	    0372  41			     inc cx
    678					     load <cx>
2   679	    0373  51				 push cx
    680	    0374  E8 FECF		     call find_next
    681	    0377  72 02			     jc	_count_subfiles_from_end
    682	    0379  EB F6			     jmp _count_subfiles_from_loop
    683	    037B			 _count_subfiles_from_end:
    684					     restore <cx>
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 13
2tree.ASM



2   685	    037B  59				 pop cx
    686	    037C  8B C1			     mov ax, cx
    687	    037E  C3			     ret
    688					 ;
    689					 ; error codes
    690					 ;
    691	    037F  12			 no_more_files db 18
    692	    0380  2B			 dta_len db 2bh
    693					 ;
    694					 ; error messages
    695					 ;
    696	    0381  43 68	61 6E 67 65 20+	 cd_fails db 'Change directory fails.$'
    697		  64 69	72 65 63 74 6F+
    698		  72 79	20 66 61 69 6C+
    699		  73 2E	24
    700	    0399  66 69	6E 64 5F 66 69+	 find_first_fails db 'find_first filenames fails.$'
    701		  72 73	74 20 66 69 6C+
    702		  65 6E	61 6D 65 73 20+
    703		  66 61	69 6C 73 2E 24
    704	    03B5  66 69	6E 64 5F 6E 65+	 find_next_fails db  'find_next	filenames fails.$'
    705		  78 74	20 66 69 6C 65+
    706		  6E 61	6D 65 73 20 66+
    707		  61 69	6C 73 2E 24
    708					 ;
    709					 ; int variables
    710					 ;
    711	    03D0  0000			 current_max_entities dw 0
    712					 ;
    713					 ;   parse arguments
    714					 ;
    715	    03D2  01			 deep_level db 1
    716	    03D3  2A			 file_mask db '*'
    717	    03D4  2E 2A	00 00 00	 file_ext db '.*', 00h,	00h, 00h
    718	    03D9  2A 00			 folder_mask db	'*', 00h
    719	    03DB  2A 2E	2A 00		 all_files db '*.*', 00h
    720					 ;
    721					 ;   pseudographic
    722					 ;
    723	    03DF  7C 20	24		 level_shift db	'| ', '$'
    724	    03E2  C3 24			 zero_level_middle_file	db 195,	'$'
    725	    03E4  7C 24			 zero_level_subfile db '|', '$'
    726	    03E6  C2 24			 no_zero_level_first_file db 194, '$'
    727	    03E8  C3 24			 no_zero_level_middle_file db 195, '$'
    728	    03EA  C0 24			 no_zero_level_end_file	db 192,	'$'
    729					 ;
    730					 ; strings
    731					 ;
    732	    03EC  2E 2E	00		 parent_folder db '..',	00h
    733	    03EF  40*(00)		 working_folder	db 64 dup(00h)
    734	    042F  40*(00)		 root_folder db	64 dup(00h)
    735	    046F  40*(00)		 start_mask db 64 dup(00h)
    736	    04AF  0A 24			 newline db 0Ah, '$'
    737	    04B1  10CC*(00)		 dta db	4300 dup(0)
    738	    157D  2B*(00)		 count_dta db 43 dup(0)
    739					 end start
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 14
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/09/19"
??FILENAME			  Text	 "2tree	  "
??TIME				  Text	 "00:44:12"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 2TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALL_FILES			  Byte	 DGROUP:03DB
CD				  Near	 DGROUP:02D7
CD_ERROR			  Near	 DGROUP:02E3
CD_FAILS			  Byte	 DGROUP:0381
COUNT_DTA			  Byte	 DGROUP:157D
COUNT_NO_SPACE_NO_ZERO_LETTERS	  Near	 DGROUP:033E
COUNT_SUBFILES_HERE		  Near	 DGROUP:035D
CURRENT_MAX_ENTITIES		  Word	 DGROUP:03D0
DEEP_LEVEL			  Byte	 DGROUP:03D2
DTA				  Byte	 DGROUP:04B1
DTA_LEN				  Byte	 DGROUP:0380
FILE_EXT			  Byte	 DGROUP:03D4
FILE_MASK			  Byte	 DGROUP:03D3
FIND_FIRST			  Near	 DGROUP:024B
FIND_FIRST_ERROR		  Near	 DGROUP:01E8
FIND_FIRST_FAILS		  Byte	 DGROUP:0399
FIND_NEXT			  Near	 DGROUP:0246
FIND_NEXT_ERROR			  Near	 DGROUP:01F7
FIND_NEXT_FAILS			  Byte	 DGROUP:03B5
FOLDER_MASK			  Byte	 DGROUP:03D9
IS_FOLDER			  Near	 DGROUP:01D1
LEVEL_SHIFT			  Byte	 DGROUP:03DF
LIST_SUBFILES_RECURSIVE		  Near	 DGROUP:0142
LIST_SUBFILES_RECURSIVE_FROM	  Near	 DGROUP:0123
MOVE_DTA			  Near	 DGROUP:01BF
NEWLINE				  Byte	 DGROUP:04AF
NO_MORE_FILES			  Byte	 DGROUP:037F
NO_ZERO_LEVEL_END_FILE		  Byte	 DGROUP:03EA
NO_ZERO_LEVEL_FIRST_FILE	  Byte	 DGROUP:03E6
NO_ZERO_LEVEL_MIDDLE_FILE	  Byte	 DGROUP:03E8
PARENT_FOLDER			  Byte	 DGROUP:03EC
PARSE_ARGS			  Near	 DGROUP:021E
PARSE_COMMAND_LINE		  Near	 DGROUP:0209
PARSE_D				  Near	 DGROUP:022C
PARSE_END			  Near	 DGROUP:0245
PARSE_F				  Near	 DGROUP:0239
PRINT_PSEUDOGRAPHIC_PREFIX	  Near	 DGROUP:0299
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:0328
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 15
Symbol Table



ROOT_FOLDER			  Byte	 DGROUP:042F
SAVE_CWD			  Near	 DGROUP:030A
SET_DTA				  Near	 DGROUP:02F2
SHOW_FILENAME_FROM_DTA		  Near	 DGROUP:0258
START				  Near	 DGROUP:0100
START_MASK			  Byte	 DGROUP:046F
WORKING_FOLDER			  Byte	 DGROUP:03EF
ZERO_LEVEL_MIDDLE_FILE		  Byte	 DGROUP:03E2
ZERO_LEVEL_SUBFILE		  Byte	 DGROUP:03E4
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:035C
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:0345
_COUNT_SUBFILES_FROM_END	  Near	 DGROUP:037B
_COUNT_SUBFILES_FROM_LOOP	  Near	 DGROUP:0371
_IS_FOLDER_END			  Near	 DGROUP:01E7
_IS_FOLDER_FALSE		  Near	 DGROUP:01E2
_IS_FOLDER_TRUE			  Near	 DGROUP:01DD
_LIST_SUBFILES_RECURSIVE_END	  Near	 DGROUP:01BD
_LIST_SUBFILES_RECURSIVE_LOOP	  Near	 DGROUP:0160
_LIST_SUBFILES_RECURSIVE_NEXT	  Near	 DGROUP:01B2
_PRINT_PSEUDOGRAPHIC_PREFIX_END	  Near	 DGROUP:02D6
_PRINT_PSEUDOGRAPHIC_PREFIX_LOOP  Near	 DGROUP:02A2
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02AE
_LEVEL
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02CD
_LEVEL_END
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02BB
_LEVEL_FIRST
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02C4
_LEVEL_MIDDLE
_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:033D
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:032E
_SHOW_FILENAME_FROM_DTA_VALID_NA  Near	 DGROUP:0272
ME

Macro Name

CLEAR_MES
EXIT
GET_OFFSET
GET_TRANSITION
LOAD
PRINT
PRINT_RANGE
PUT
RESTORE
SET_TRANSITION
SET_TRANSITION_FOR_ALL
SET_TRANSITION_FOR_DIGITS
SET_TRANSITION_FOR_LETTERS
SET_TRANSITION_LENGTH_FROM_START
SET_ZERO
TO_NON_SPACE
Turbo Assembler	 Version 4.1	    12/09/19 00:44:13	    Page 16
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  15A8 Word	  Public  CODE
