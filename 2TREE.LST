Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 1
2tree.ASM



      1					 include macro.asm
1     2					 load macro args
1     3					     irp d,<args>
1     4						 push d
1     5					     endm
1     6					 endm
1     7
1     8					 restore macro args
1     9					     irp d,<args>
1    10						 pop d
1    11					     endm
1    12					 endm
1    13
1    14					 exit macro
1    15					     mov ah, 00h
1    16					     int 21h
1    17					 endm
1    18
1    19					 print macro buf
1    20						 mov ah, 09h
1    21						 mov dx, buf
1    22						 int 21h
1    23					 endm
1    24
1    25					 print_range macro args
1    26					     irp d,<args>
1    27						 print <offset d>
1    28					     endm
1    29					 endm
1    30
1    31					 get_offset macro state
1    32					     xor dx, dx
1    33					     xor ax, ax
1    34					     mov al, state
1    35					     shl ax, 8
1    36					 endm get_offset
1    37
1    38					 to_non_space macro addr
1    39					     local l1, l2
1    40					     mov si, addr
1    41					 l1:
1    42					     mov byte ptr al, [si]
1    43					     cmp al, 20h
1    44					     je	l2
1    45					     cmp al, 0
1    46					     je	l2
1    47					     inc si
1    48					     jmp l1
1    49					 l2:
1    50					     inc si
1    51					     mov ax, si
1    52					 endm
1    53
1    54					 set_transition	macro buf, from, to, char
1    55					     load<bx, dx>
1    56					     get_offset	from
1    57
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 2
2tree.ASM



1    58					     add ax, offset buf
1    59					     add ax, char
1    60
1    61					     mov bx, ax
1    62					     mov byte ptr [bx],	to
1    63					     restore<dx, bx>
1    64					 endm
1    65
1    66					 set_transition_length_from_start macro	buf, from, to, start, iterations
1    67					     local l1, end
1    68					     mov bx, start
1    69					     mov cx, iterations
1    70					 l1:
1    71					     cmp cx, 0
1    72					     je	end
1    73
1    74					     load <bx,cx>
1    75					     set_transition buf	from to	bx
1    76					     restore <cx,bx>
1    77
1    78					     inc bx
1    79					     dec cx
1    80					     jmp l1
1    81					 end:
1    82					 endm
1    83
1    84					 set_zero macro	state
1    85					     mov al, 0
1    86					     mov byte ptr [state], al
1    87					 endm
1    88
1    89					 set_transition_for_all	macro buf, from, to
1    90					     set_transition_length_from_start buf, from, to, 0,	255
1    91					 endm
1    92
1    93					 set_transition_for_digits macro buf, from, to
1    94					     set_transition_length_from_start buf, from, to, 30, 10
1    95					 endm
1    96
1    97					 set_transition_for_letters macro buf, from, to
1    98					     set_transition_length_from_start buf, from, to, 97, 26
1    99					     set_transition_length_from_start buf, from, to, 65, 26
1   100					 endm
1   101
1   102					 get_transition	macro buf, from, char
1   103					     load <dx>
1   104					     get_offset	from
1   105					     restore <dx>
1   106
1   107					     add ax, offset buf
1   108					     add ax, char
1   109
1   110					     mov bx, ax
1   111					     xor ax, ax
1   112					     mov al, byte ptr [bx]
1   113					 endm
1   114
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 3
2tree.ASM



1   115					 put macro from, to, position
1   116					     xor dx, dx
1   117					     xor bx, bx
1   118
1   119					     mov dx, offset to
1   120					     mov bl, byte ptr [position]
1   121					     add dx, bx
1   122
1   123					     mov bl, byte ptr [from]
1   124					     mov byte ptr [edx], bl
1   125					     inc [position]
1   126					 endm
1   127
1   128					 clear_mes macro mes, lastidx
1   129					     local l1, end
1   130					     mov bx, offset mes
1   131					     mov cl, byte ptr [lastidx]
1   132					     inc cl
1   133					 l1:
1   134					     cmp cl, 0
1   135					     je	end
1   136					     mov byte ptr [bx],	'$'
1   137					     inc bx
1   138					     dec cl
1   139					     jmp l1
1   140					 end:
1   141					     mov bl, 0
1   142					     mov byte ptr [lastidx], bl
1   143					 endm
    144
    145	    0000			 model tiny
    146					 .386
    147	    0000			 .code
    148					 org 100h
    149	    0100			 start:
    150	    0100  E8 0102		     call save_cwd
    151	    0103  B8 0374r		     mov ax, offset dta
    152	    0106  50			     push ax
    153	    0107  E8 00F1		     call set_dta
    154	    010A  E8 0061		     call parse_command_line
    155	    010D  B8 02F4r		     mov ax, offset root_folder
    156	    0110  50			     push ax
    157	    0111  E8 00CC		     call cd
    158					     ;
    159					     ; list subfiles
    160					     ;
    161	    0114  B8 02AFr		     mov ax, offset folder_mask
    162	    0117  B9 0000		     mov cx, 0
    163	    011A  50			     push ax
    164	    011B  51			     push cx
    165	    011C  E8 000B		     call list_subfiles
    166
    167					     ;
    168					     ; list files
    169					     ;
    170	    011F  B8 02A9r		     mov ax, offset file_mask
    171	    0122  B9 0000		     mov cx, 0
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 4
2tree.ASM



    172	    0125  50			     push ax
    173	    0126  51			     push cx
    174	    0127  E8 0000		     call list_subfiles
    175
    176	    012A			 list_subfiles:
    177	    012A  5B			     pop bx
    178	    012B  59			     pop cx ; deep level
    179	    012C  58			     pop ax ; filemask offset
    180	    012D  53			     push bx
    181					     ; mov ax, offset file_mask
    182	    012E  50			     push ax
    183	    012F  E8 007E		     call find_first
    184	    0132  72 16			     jc	find_first_error
    185	    0134			 find_loop:
    186	    0134  E8 0086		     call show_filename_from_dta
    187	    0137  E8 0071		     call find_next
    188	    013A  73 F8			     jnc find_loop
    189	    013C  3A 06	0258r		     cmp al, byte ptr [no_more_files]
    190	    0140  75 1A			     jne find_next_error
    191	    0142			 program_end:
    192	    0142  B8 02B4r		     mov ax, offset working_folder
    193	    0145  50			     push ax
    194	    0146  E8 0097		     call cd
    195	    0149  C3			     ret
    196
    197	    014A			 find_first_error:
    198					     print_range <find_first_fails, newline>
2   199						 print <offset find_first_fails>
3   200	    014A  B4 09				 mov ah, 09h
3   201	    014C  BA 0271r			 mov dx, offset	find_first_fails
3   202	    014F  CD 21				 int 21h
2   203						 print <offset newline>
3   204	    0151  B4 09				 mov ah, 09h
3   205	    0153  BA 039Fr			 mov dx, offset	newline
3   206	    0156  CD 21				 int 21h
    207					     exit
1   208	    0158  B4 00			     mov ah, 00h
1   209	    015A  CD 21			     int 21h
    210	    015C			 find_next_error:
    211					     print_range <find_next_fails, newline>
2   212						 print <offset find_next_fails>
3   213	    015C  B4 09				 mov ah, 09h
3   214	    015E  BA 028Dr			 mov dx, offset	find_next_fails
3   215	    0161  CD 21				 int 21h
2   216						 print <offset newline>
3   217	    0163  B4 09				 mov ah, 09h
3   218	    0165  BA 039Fr			 mov dx, offset	newline
3   219	    0168  CD 21				 int 21h
    220					     exit
1   221	    016A  B4 00			     mov ah, 00h
1   222	    016C  CD 21			     int 21h
    223
    224	    016E			 parse_command_line:
    225					     ;
    226					     ; prepare root folder
    227					     ;
    228	    016E  BE 0082		     mov si, 82h
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 5
2tree.ASM



    229	    0171  B9 0040		     mov cx, 64
    230	    0174  51			     push cx
    231	    0175  56			     push si
    232	    0176  E8 00C0		     call count_no_space_no_zero_letters
    233	    0179  8B C8			     mov cx, ax
    234	    017B  BE 0082		     mov si, 82h
    235	    017E  BF 02F4r		     mov di, offset root_folder
    236	    0181  F3> A4		     rep movsb
    237
    238	    0183			 parse_args:
    239	    0183  46			     inc si
    240	    0184  46			     inc si
    241	    0185  80 3C	64		     cmp byte ptr [si],	'd'
    242	    0188  74 07			     je	parse_d
    243	    018A  80 3C	66		     cmp byte ptr [si],	'f'
    244	    018D  74 0F			     je	parse_f
    245	    018F  EB 19			     jmp parse_end
    246	    0191			 parse_d:
    247					     ;
    248					     ; parse_deep level
    249					     ;
    250	    0191  46			     inc si
    251	    0192  46			     inc si
    252	    0193  8A 1C			     mov bl, byte ptr [si]
    253	    0195  80 EB	30		     sub bl, 30h	     ; to number
    254	    0198  88 1E	02A8r		     mov byte ptr [deep_level],	bl
    255	    019C  EB E5			     jmp parse_args
    256	    019E			 parse_f:
    257	    019E  46			     inc si
    258	    019F  46			     inc si
    259	    01A0  BF 02AAr		     mov di, offset file_ext
    260	    01A3  B9 0004		     mov cx, 4
    261	    01A6  F3> A4		     rep movsb
    262	    01A8  EB D9			     jmp parse_args
    263					     ;
    264					     ; parse file extension
    265					     ;
    266	    01AA			 parse_end:
    267	    01AA  C3			     ret
    268	    01AB			 find_next:
    269	    01AB  B4 4F			     mov ah, 4Fh
    270	    01AD  CD 21			     int 21h
    271
    272	    01AF  C3			     ret
    273
    274	    01B0			 find_first:
    275	    01B0  5B			     pop bx
    276	    01B1  5A			     pop dx		 ; filename spec
    277	    01B2  B9 0010		     mov cx, 10h	 ; include directories
    278	    01B5  53			     push bx
    279
    280	    01B6  33 C0			     xor ax, ax
    281	    01B8  B4 4E			     mov ah, 4Eh
    282	    01BA  CD 21			     int 21h
    283	    01BC  C3			     ret
    284	    01BD			 show_filename_from_dta:
    285	    01BD  BB 0392r		     mov bx, offset dta	+ 1Eh
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 6
2tree.ASM



    286	    01C0  80 3F	2E		     cmp byte ptr [bx],	'.'
    287	    01C3  75 01			     jne show_filename_from_dta_valid_name
    288	    01C5  C3			     ret
    289	    01C6			 show_filename_from_dta_valid_name:
    290	    01C6  B9 000D		     mov cx, 13
    291	    01C9  51			     push cx
    292	    01CA  53			     push bx
    293	    01CB  E8 006B		     call count_no_space_no_zero_letters
    294	    01CE  8B C8			     mov cx, ax
    295	    01D0  B8 0392r		     mov ax, offset dta	+ 1Eh
    296	    01D3  51			     push cx
    297	    01D4  50			     push ax
    298	    01D5  E8 004B		     call print_string_with_length
    299					     print_range <newline>
2   300						 print <offset newline>
3   301	    01D8  B4 09				 mov ah, 09h
3   302	    01DA  BA 039Fr			 mov dx, offset	newline
3   303	    01DD  CD 21				 int 21h
    304	    01DF  C3			     ret
    305	    01E0			 cd:
    306	    01E0  5B			     pop bx ; ret addr
    307	    01E1  5A			     pop dx ; root address
    308	    01E2  53			     push bx ; ret addr
    309
    310	    01E3  33 C0			     xor ax, ax
    311	    01E5  B4 3B			     mov ah, 3Bh
    312	    01E7  CD 21			     int 21h
    313
    314	    01E9  72 01			     jc	cd_error
    315	    01EB  C3			     ret
    316	    01EC			 cd_error:
    317					     print_range <cd_fails, newline>
2   318						 print <offset cd_fails>
3   319	    01EC  B4 09				 mov ah, 09h
3   320	    01EE  BA 0259r			 mov dx, offset	cd_fails
3   321	    01F1  CD 21				 int 21h
2   322						 print <offset newline>
3   323	    01F3  B4 09				 mov ah, 09h
3   324	    01F5  BA 039Fr			 mov dx, offset	newline
3   325	    01F8  CD 21				 int 21h
    326	    01FA  C3			     ret
    327
    328	    01FB			 set_dta:
    329	    01FB  5B			     pop bx
    330	    01FC  5A			     pop dx			 ; dta address offset
    331	    01FD  53			     push bx
    332
    333	    01FE  33 C0			     xor ax, ax
    334	    0200  B4 1A			     mov ah, 1Ah
    335	    0202  CD 21			     int 21h
    336
    337	    0204  C3			     ret
    338
    339	    0205			 save_cwd:
    340	    0205  BE 02B4r		     mov si, offset working_folder
    341
    342					     ;
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 7
2tree.ASM



    343					     ; save driver
    344					     ;
    345	    0208  B4 19			     mov ah, 19h		 ; GET CURRENT DEFAULT DRIVE
    346	    020A  CD 21			     int 21h
    347	    020C  8A D0			     mov dl, al
    348	    020E  80 C2	41		     add dl, 41h
    349	    0211  88 14			     mov byte ptr [si],	dl
    350	    0213  46			     inc si
    351	    0214  C6 04	3A		     mov byte ptr [si],	':'
    352	    0217  46			     inc si
    353	    0218  C6 04	5C		     mov byte ptr [si],	'\'
    354	    021B  46			     inc si
    355
    356					     ;
    357					     ; save folder
    358					     ;
    359	    021C  32 D2			     xor dl, dl			 ; Actual drive
    360	    021E  B4 47			     mov ah, 47h		 ; CWD - GET CURRENT DIRECTORY
    361	    0220  CD 21			     int 21h
    362	    0222  C3			     ret
    363	    0223			 print_string_with_length:
    364	    0223  5B			     pop bx ; ret address
    365	    0224  5E			     pop si ; string offset
    366	    0225  59			     pop cx ; string length
    367	    0226  53			     push bx; ret address
    368	    0227  33 C0			     xor ax, ax
    369	    0229			 _print_string_with_length_loop:
    370	    0229  B4 02			     mov ah, 02h
    371	    022B  8A 14			     mov dl, byte ptr [si]
    372	    022D  CD 21			     int 21h
    373	    022F  49			     dec cx
    374	    0230  46			     inc si
    375	    0231  83 F9	00		     cmp cx, 00h
    376	    0234  74 02			     je	_print_string_with_length_end
    377	    0236  EB F1			     jmp _print_string_with_length_loop
    378	    0238			 _print_string_with_length_end:
    379	    0238  C3			     ret
    380	    0239			 count_no_space_no_zero_letters:
    381	    0239  5B			     pop bx ; ret address
    382	    023A  5E			     pop si ; string offset
    383	    023B  59			     pop cx ; string length
    384	    023C  53			     push bx ; ret address
    385	    023D  B8 0000		     mov ax, 0
    386	    0240			 _count_non_space_symbols_loop:
    387	    0240  80 3C	20		     cmp byte ptr [si],	20h
    388	    0243  74 12			     je	_count_non_space_symbols_end
    389	    0245  80 3C	0D		     cmp byte ptr [si],	0Dh
    390	    0248  74 0D			     je	_count_non_space_symbols_end
    391	    024A  80 3C	00		     cmp byte ptr [si],	00h
    392	    024D  74 08			     je	_count_non_space_symbols_end
    393	    024F  3B C1			     cmp ax, cx
    394	    0251  74 04			     je	_count_non_space_symbols_end
    395	    0253  40			     inc ax
    396	    0254  46			     inc si
    397	    0255  EB E9			     jmp _count_non_space_symbols_loop
    398	    0257			 _count_non_space_symbols_end:
    399	    0257  C3			     ret
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 8
2tree.ASM



    400					 ;
    401					 ; error codes
    402					 ;
    403	    0258  12			 no_more_files db 18
    404					 ;
    405					 ; error messages
    406					 ;
    407	    0259  43 68	61 6E 67 65 20+	 cd_fails db 'Change directory fails.$'
    408		  64 69	72 65 63 74 6F+
    409		  72 79	20 66 61 69 6C+
    410		  73 2E	24
    411	    0271  66 69	6E 64 5F 66 69+	 find_first_fails db 'find_first filenames fails.$'
    412		  72 73	74 20 66 69 6C+
    413		  65 6E	61 6D 65 73 20+
    414		  66 61	69 6C 73 2E 24
    415	    028D  66 69	6E 64 5F 6E 65+	 find_next_fails db  'find_next	filenames fails.$'
    416		  78 74	20 66 69 6C 65+
    417		  6E 61	6D 65 73 20 66+
    418		  61 69	6C 73 2E 24
    419					 ;
    420					 ;   parse arguments
    421					 ;
    422	    02A8  02			 deep_level db 2
    423	    02A9  2A			 file_mask db '*'
    424	    02AA  2E 2A	00 00 00	 file_ext db '.*', 00h,	00h, 00h
    425	    02AF  2A 00			 folder_mask db	'*', 00h
    426					 ;
    427					 ; strings
    428					 ;
    429	    02B1  2E 2E	00		 parent_folder db '..',	00h
    430	    02B4  40*(00)		 working_folder	db 64 dup(00h)
    431	    02F4  40*(00)		 root_folder db	64 dup(00h)
    432	    0334  40*(00)		 start_mask db 64 dup(00h)
    433	    0374  2B*(00)		 dta db	43 dup(0)
    434	    039F  0A 24			 newline db 0Ah, '$'
    435					 end start
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/07/19"
??FILENAME			  Text	 "2tree	  "
??TIME				  Text	 "17:55:44"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 2TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CD				  Near	 DGROUP:01E0
CD_ERROR			  Near	 DGROUP:01EC
CD_FAILS			  Byte	 DGROUP:0259
COUNT_NO_SPACE_NO_ZERO_LETTERS	  Near	 DGROUP:0239
DEEP_LEVEL			  Byte	 DGROUP:02A8
DTA				  Byte	 DGROUP:0374
FILE_EXT			  Byte	 DGROUP:02AA
FILE_MASK			  Byte	 DGROUP:02A9
FIND_FIRST			  Near	 DGROUP:01B0
FIND_FIRST_ERROR		  Near	 DGROUP:014A
FIND_FIRST_FAILS		  Byte	 DGROUP:0271
FIND_LOOP			  Near	 DGROUP:0134
FIND_NEXT			  Near	 DGROUP:01AB
FIND_NEXT_ERROR			  Near	 DGROUP:015C
FIND_NEXT_FAILS			  Byte	 DGROUP:028D
FOLDER_MASK			  Byte	 DGROUP:02AF
LIST_SUBFILES			  Near	 DGROUP:012A
NEWLINE				  Byte	 DGROUP:039F
NO_MORE_FILES			  Byte	 DGROUP:0258
PARENT_FOLDER			  Byte	 DGROUP:02B1
PARSE_ARGS			  Near	 DGROUP:0183
PARSE_COMMAND_LINE		  Near	 DGROUP:016E
PARSE_D				  Near	 DGROUP:0191
PARSE_END			  Near	 DGROUP:01AA
PARSE_F				  Near	 DGROUP:019E
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:0223
PROGRAM_END			  Near	 DGROUP:0142
ROOT_FOLDER			  Byte	 DGROUP:02F4
SAVE_CWD			  Near	 DGROUP:0205
SET_DTA				  Near	 DGROUP:01FB
SHOW_FILENAME_FROM_DTA		  Near	 DGROUP:01BD
SHOW_FILENAME_FROM_DTA_VALID_NAM  Near	 DGROUP:01C6
E
START				  Near	 DGROUP:0100
START_MASK			  Byte	 DGROUP:0334
WORKING_FOLDER			  Byte	 DGROUP:02B4
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:0257
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:0240
Turbo Assembler	 Version 4.1	    12/07/19 17:55:44	    Page 10
Symbol Table



_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:0238
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:0229

Macro Name

CLEAR_MES
EXIT
GET_OFFSET
GET_TRANSITION
LOAD
PRINT
PRINT_RANGE
PUT
RESTORE
SET_TRANSITION
SET_TRANSITION_FOR_ALL
SET_TRANSITION_FOR_DIGITS
SET_TRANSITION_FOR_LETTERS
SET_TRANSITION_LENGTH_FROM_START
SET_ZERO
TO_NON_SPACE

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  03A1 Word	  Public  CODE
