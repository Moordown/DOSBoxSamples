Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 1
2tree.ASM



      1					 include macro.asm
1     2					 load macro args
1     3					     irp d,<args>
1     4						 push d
1     5					     endm
1     6					 endm
1     7
1     8					 restore macro args
1     9					     irp d,<args>
1    10						 pop d
1    11					     endm
1    12					 endm
1    13
1    14					 exit macro
1    15					     mov ah, 00h
1    16					     int 21h
1    17					 endm
1    18
1    19					 print macro buf
1    20						 mov ah, 09h
1    21						 mov dx, buf
1    22						 int 21h
1    23					 endm
1    24
1    25					 print_range macro args
1    26					     irp d,<args>
1    27						 print <offset d>
1    28					     endm
1    29					 endm
1    30
1    31					 get_offset macro state
1    32					     xor dx, dx
1    33					     xor ax, ax
1    34					     mov al, state
1    35					     shl ax, 8
1    36					 endm get_offset
1    37
1    38					 to_non_space macro addr
1    39					     local l1, l2
1    40					     mov si, addr
1    41					 l1:
1    42					     mov byte ptr al, [si]
1    43					     cmp al, 20h
1    44					     je	l2
1    45					     cmp al, 0
1    46					     je	l2
1    47					     inc si
1    48					     jmp l1
1    49					 l2:
1    50					     inc si
1    51					     mov ax, si
1    52					 endm
1    53
1    54					 set_transition	macro buf, from, to, char
1    55					     load<bx, dx>
1    56					     get_offset	from
1    57
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 2
2tree.ASM



1    58					     add ax, offset buf
1    59					     add ax, char
1    60
1    61					     mov bx, ax
1    62					     mov byte ptr [bx],	to
1    63					     restore<dx, bx>
1    64					 endm
1    65
1    66					 set_transition_length_from_start macro	buf, from, to, start, iterations
1    67					     local l1, end
1    68					     mov bx, start
1    69					     mov cx, iterations
1    70					 l1:
1    71					     cmp cx, 0
1    72					     je	end
1    73
1    74					     load <bx,cx>
1    75					     set_transition buf	from to	bx
1    76					     restore <cx,bx>
1    77
1    78					     inc bx
1    79					     dec cx
1    80					     jmp l1
1    81					 end:
1    82					 endm
1    83
1    84					 set_zero macro	state
1    85					     mov al, 0
1    86					     mov byte ptr [state], al
1    87					 endm
1    88
1    89					 set_transition_for_all	macro buf, from, to
1    90					     set_transition_length_from_start buf, from, to, 0,	255
1    91					 endm
1    92
1    93					 set_transition_for_digits macro buf, from, to
1    94					     set_transition_length_from_start buf, from, to, 30, 10
1    95					 endm
1    96
1    97					 set_transition_for_letters macro buf, from, to
1    98					     set_transition_length_from_start buf, from, to, 97, 26
1    99					     set_transition_length_from_start buf, from, to, 65, 26
1   100					 endm
1   101
1   102					 get_transition	macro buf, from, char
1   103					     load <dx>
1   104					     get_offset	from
1   105					     restore <dx>
1   106
1   107					     add ax, offset buf
1   108					     add ax, char
1   109
1   110					     mov bx, ax
1   111					     xor ax, ax
1   112					     mov al, byte ptr [bx]
1   113					 endm
1   114
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 3
2tree.ASM



1   115					 put macro from, to, position
1   116					     xor dx, dx
1   117					     xor bx, bx
1   118
1   119					     mov dx, offset to
1   120					     mov bl, byte ptr [position]
1   121					     add dx, bx
1   122
1   123					     mov bl, byte ptr [from]
1   124					     mov byte ptr [edx], bl
1   125					     inc [position]
1   126					 endm
1   127
1   128					 clear_mes macro mes, lastidx
1   129					     local l1, end
1   130					     mov bx, offset mes
1   131					     mov cl, byte ptr [lastidx]
1   132					     inc cl
1   133					 l1:
1   134					     cmp cl, 0
1   135					     je	end
1   136					     mov byte ptr [bx],	'$'
1   137					     inc bx
1   138					     dec cl
1   139					     jmp l1
1   140					 end:
1   141					     mov bl, 0
1   142					     mov byte ptr [lastidx], bl
1   143					 endm
    144
    145	    0000			 model tiny
    146					 .386
    147	    0000			 .code
    148					 org 100h
    149	    0100			 start:
    150	    0100  E8 00E8		     call save_cwd
    151	    0103  B8 0357r		     mov ax, offset dta
    152	    0106  50			     push ax
    153	    0107  E8 00D7		     call set_dta
    154	    010A  E8 004D		     call parse_command_line
    155	    010D  B8 02D7r		     mov ax, offset root_folder
    156	    0110  50			     push ax
    157	    0111  E8 00B2		     call cd
    158	    0114  B8 028Fr		     mov ax, offset file_mask
    159	    0117  50			     push ax
    160	    0118  E8 0081		     call find_first
    161	    011B  72 19			     jc	find_first_error
    162	    011D			 find_loop:
    163	    011D  E8 0089		     call show_filename_from_dta
    164	    0120  E8 0074		     call find_next
    165	    0123  73 F8			     jnc find_loop
    166	    0125  3A 06	023Er		     cmp al, byte ptr [no_more_files]
    167	    0129  75 1D			     jne find_next_error
    168	    012B			 program_end:
    169	    012B  B8 0297r		     mov ax, offset working_folder
    170	    012E  50			     push ax
    171	    012F  E8 0094		     call cd
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 4
2tree.ASM



    172					     exit
1   173	    0132  B4 00			     mov ah, 00h
1   174	    0134  CD 21			     int 21h
    175
    176	    0136			 find_first_error:
    177					     print_range <find_first_fails, newline>
2   178						 print <offset find_first_fails>
3   179	    0136  B4 09				 mov ah, 09h
3   180	    0138  BA 0257r			 mov dx, offset	find_first_fails
3   181	    013B  CD 21				 int 21h
2   182						 print <offset newline>
3   183	    013D  B4 09				 mov ah, 09h
3   184	    013F  BA 0382r			 mov dx, offset	newline
3   185	    0142  CD 21				 int 21h
    186					     exit
1   187	    0144  B4 00			     mov ah, 00h
1   188	    0146  CD 21			     int 21h
    189	    0148			 find_next_error:
    190					     print_range <find_next_fails, newline>
2   191						 print <offset find_next_fails>
3   192	    0148  B4 09				 mov ah, 09h
3   193	    014A  BA 0273r			 mov dx, offset	find_next_fails
3   194	    014D  CD 21				 int 21h
2   195						 print <offset newline>
3   196	    014F  B4 09				 mov ah, 09h
3   197	    0151  BA 0382r			 mov dx, offset	newline
3   198	    0154  CD 21				 int 21h
    199					     exit
1   200	    0156  B4 00			     mov ah, 00h
1   201	    0158  CD 21			     int 21h
    202	    015A			 parse_command_line:
    203					     ;
    204					     ; prepare root folder
    205					     ;
    206	    015A  BE 0082		     mov si, 82h
    207	    015D  B9 0040		     mov cx, 64
    208	    0160  51			     push cx
    209	    0161  56			     push si
    210	    0162  E8 00BA		     call count_no_space_no_zero_letters
    211	    0165  8B C8			     mov cx, ax
    212	    0167  BE 0082		     mov si, 82h
    213	    016A  BF 02D7r		     mov di, offset root_folder
    214	    016D  F3> A4		     rep movsb
    215
    216	    016F			 parse_args:
    217	    016F  46			     inc si
    218	    0170  46			     inc si
    219	    0171  80 3C	64		     cmp byte ptr [si],	'd'
    220	    0174  74 07			     je	parse_d
    221	    0176  80 3C	66		     cmp byte ptr [si],	'f'
    222	    0179  74 0F			     je	parse_f
    223	    017B  EB 19			     jmp parse_end
    224	    017D			 parse_d:
    225					     ;
    226					     ; parse_deep level
    227					     ;
    228	    017D  46			     inc si
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 5
2tree.ASM



    229	    017E  46			     inc si
    230	    017F  8A 1C			     mov bl, byte ptr [si]
    231	    0181  80 EB	30		     sub bl, 30h	     ; to number
    232	    0184  88 1E	028Er		     mov byte ptr [deep_level],	bl
    233	    0188  EB E5			     jmp parse_args
    234	    018A			 parse_f:
    235	    018A  46			     inc si
    236	    018B  46			     inc si
    237	    018C  BF 0290r		     mov di, offset file_ext
    238	    018F  B9 0004		     mov cx, 4
    239	    0192  F3> A4		     rep movsb
    240	    0194  EB D9			     jmp parse_args
    241					     ;
    242					     ; parse file extension
    243					     ;
    244	    0196			 parse_end:
    245	    0196  C3			     ret
    246	    0197			 find_next:
    247	    0197  B4 4F			     mov ah, 4Fh
    248	    0199  CD 21			     int 21h
    249
    250	    019B  C3			     ret
    251
    252	    019C			 find_first:
    253	    019C  5B			     pop bx
    254	    019D  5A			     pop dx		 ; filename spec
    255	    019E  B9 0010		     mov cx, 10h	 ; include directories
    256	    01A1  53			     push bx
    257
    258	    01A2  33 C0			     xor ax, ax
    259	    01A4  B4 4E			     mov ah, 4Eh
    260	    01A6  CD 21			     int 21h
    261	    01A8  C3			     ret
    262	    01A9			 show_filename_from_dta:
    263	    01A9  B8 0375r		     mov ax, offset dta	+ 1Eh
    264	    01AC  B9 000D		     mov cx, 13
    265	    01AF  51			     push cx
    266	    01B0  50			     push ax
    267	    01B1  E8 006B		     call count_no_space_no_zero_letters
    268	    01B4  8B C8			     mov cx, ax
    269	    01B6  B8 0375r		     mov ax, offset dta	+ 1Eh
    270	    01B9  51			     push cx
    271	    01BA  50			     push ax
    272	    01BB  E8 004B		     call print_string_with_length
    273					     print_range <newline>
2   274						 print <offset newline>
3   275	    01BE  B4 09				 mov ah, 09h
3   276	    01C0  BA 0382r			 mov dx, offset	newline
3   277	    01C3  CD 21				 int 21h
    278	    01C5  C3			     ret
    279	    01C6			 cd:
    280	    01C6  5B			     pop bx ; ret addr
    281	    01C7  5A			     pop dx ; root address
    282	    01C8  53			     push bx ; ret addr
    283
    284	    01C9  33 C0			     xor ax, ax
    285	    01CB  B4 3B			     mov ah, 3Bh
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 6
2tree.ASM



    286	    01CD  CD 21			     int 21h
    287
    288	    01CF  72 01			     jc	cd_error
    289	    01D1  C3			     ret
    290	    01D2			 cd_error:
    291					     print_range <cd_fails, newline>
2   292						 print <offset cd_fails>
3   293	    01D2  B4 09				 mov ah, 09h
3   294	    01D4  BA 023Fr			 mov dx, offset	cd_fails
3   295	    01D7  CD 21				 int 21h
2   296						 print <offset newline>
3   297	    01D9  B4 09				 mov ah, 09h
3   298	    01DB  BA 0382r			 mov dx, offset	newline
3   299	    01DE  CD 21				 int 21h
    300	    01E0  C3			     ret
    301
    302	    01E1			 set_dta:
    303	    01E1  5B			     pop bx
    304	    01E2  5A			     pop dx			 ; dta address offset
    305	    01E3  53			     push bx
    306
    307	    01E4  33 C0			     xor ax, ax
    308	    01E6  B4 1A			     mov ah, 1Ah
    309	    01E8  CD 21			     int 21h
    310
    311	    01EA  C3			     ret
    312
    313	    01EB			 save_cwd:
    314	    01EB  BE 0297r		     mov si, offset working_folder
    315
    316					     ;
    317					     ; save driver
    318					     ;
    319	    01EE  B4 19			     mov ah, 19h		 ; GET CURRENT DEFAULT DRIVE
    320	    01F0  CD 21			     int 21h
    321	    01F2  8A D0			     mov dl, al
    322	    01F4  80 C2	41		     add dl, 41h
    323	    01F7  88 14			     mov byte ptr [si],	dl
    324	    01F9  46			     inc si
    325	    01FA  C6 04	3A		     mov byte ptr [si],	':'
    326	    01FD  46			     inc si
    327	    01FE  C6 04	5C		     mov byte ptr [si],	'\'
    328	    0201  46			     inc si
    329
    330					     ;
    331					     ; save folder
    332					     ;
    333	    0202  32 D2			     xor dl, dl			 ; Actual drive
    334	    0204  B4 47			     mov ah, 47h		 ; CWD - GET CURRENT DIRECTORY
    335	    0206  CD 21			     int 21h
    336	    0208  C3			     ret
    337	    0209			 print_string_with_length:
    338	    0209  5B			     pop bx ; ret address
    339	    020A  5E			     pop si ; string offset
    340	    020B  59			     pop cx ; string length
    341	    020C  53			     push bx; ret address
    342	    020D  33 C0			     xor ax, ax
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 7
2tree.ASM



    343	    020F			 _print_string_with_length_loop:
    344	    020F  B4 02			     mov ah, 02h
    345	    0211  8A 14			     mov dl, byte ptr [si]
    346	    0213  CD 21			     int 21h
    347	    0215  49			     dec cx
    348	    0216  46			     inc si
    349	    0217  83 F9	00		     cmp cx, 00h
    350	    021A  74 02			     je	_print_string_with_length_end
    351	    021C  EB F1			     jmp _print_string_with_length_loop
    352	    021E			 _print_string_with_length_end:
    353	    021E  C3			     ret
    354	    021F			 count_no_space_no_zero_letters:
    355	    021F  5B			     pop bx ; ret address
    356	    0220  5E			     pop si ; string offset
    357	    0221  59			     pop cx ; string length
    358	    0222  53			     push bx ; ret address
    359	    0223  B8 0000		     mov ax, 0
    360	    0226			 _count_non_space_symbols_loop:
    361	    0226  80 3C	20		     cmp byte ptr [si],	20h
    362	    0229  74 12			     je	_count_non_space_symbols_end
    363	    022B  80 3C	0D		     cmp byte ptr [si],	0Dh
    364	    022E  74 0D			     je	_count_non_space_symbols_end
    365	    0230  80 3C	00		     cmp byte ptr [si],	00h
    366	    0233  74 08			     je	_count_non_space_symbols_end
    367	    0235  3B C1			     cmp ax, cx
    368	    0237  74 04			     je	_count_non_space_symbols_end
    369	    0239  40			     inc ax
    370	    023A  46			     inc si
    371	    023B  EB E9			     jmp _count_non_space_symbols_loop
    372	    023D			 _count_non_space_symbols_end:
    373	    023D  C3			     ret
    374					 ;
    375					 ; error codes
    376					 ;
    377	    023E  12			 no_more_files db 18
    378					 ;
    379					 ; error messages
    380					 ;
    381	    023F  43 68	61 6E 67 65 20+	 cd_fails db 'Change directory fails.$'
    382		  64 69	72 65 63 74 6F+
    383		  72 79	20 66 61 69 6C+
    384		  73 2E	24
    385	    0257  66 69	6E 64 5F 66 69+	 find_first_fails db 'find_first filenames fails.$'
    386		  72 73	74 20 66 69 6C+
    387		  65 6E	61 6D 65 73 20+
    388		  66 61	69 6C 73 2E 24
    389	    0273  66 69	6E 64 5F 6E 65+	 find_next_fails db  'find_next	filenames fails.$'
    390		  78 74	20 66 69 6C 65+
    391		  6E 61	6D 65 73 20 66+
    392		  61 69	6C 73 2E 24
    393					 ;
    394					 ;   parse arguments
    395					 ;
    396	    028E  00			 deep_level db 0
    397	    028F  2A			 file_mask db '*'
    398	    0290  2E 74	78 74 00	 file_ext db '.txt', 00h
    399	    0295  2A 00			 folder_mask db	'*', 00h
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 8
2tree.ASM



    400					 ;
    401					 ; strings
    402					 ;
    403	    0297  40*(00)		 working_folder	db 64 dup(00h)
    404	    02D7  40*(00)		 root_folder db	64 dup(00h)
    405	    0317  40*(00)		 start_mask db 64 dup(00h)
    406	    0357  2B*(00)		 dta db	43 dup(0)
    407	    0382  0A 24			 newline db 0Ah, '$'
    408					 end start
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/07/19"
??FILENAME			  Text	 "2tree	  "
??TIME				  Text	 "15:21:00"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 2TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CD				  Near	 DGROUP:01C6
CD_ERROR			  Near	 DGROUP:01D2
CD_FAILS			  Byte	 DGROUP:023F
COUNT_NO_SPACE_NO_ZERO_LETTERS	  Near	 DGROUP:021F
DEEP_LEVEL			  Byte	 DGROUP:028E
DTA				  Byte	 DGROUP:0357
FILE_EXT			  Byte	 DGROUP:0290
FILE_MASK			  Byte	 DGROUP:028F
FIND_FIRST			  Near	 DGROUP:019C
FIND_FIRST_ERROR		  Near	 DGROUP:0136
FIND_FIRST_FAILS		  Byte	 DGROUP:0257
FIND_LOOP			  Near	 DGROUP:011D
FIND_NEXT			  Near	 DGROUP:0197
FIND_NEXT_ERROR			  Near	 DGROUP:0148
FIND_NEXT_FAILS			  Byte	 DGROUP:0273
FOLDER_MASK			  Byte	 DGROUP:0295
NEWLINE				  Byte	 DGROUP:0382
NO_MORE_FILES			  Byte	 DGROUP:023E
PARSE_ARGS			  Near	 DGROUP:016F
PARSE_COMMAND_LINE		  Near	 DGROUP:015A
PARSE_D				  Near	 DGROUP:017D
PARSE_END			  Near	 DGROUP:0196
PARSE_F				  Near	 DGROUP:018A
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:0209
PROGRAM_END			  Near	 DGROUP:012B
ROOT_FOLDER			  Byte	 DGROUP:02D7
SAVE_CWD			  Near	 DGROUP:01EB
SET_DTA				  Near	 DGROUP:01E1
SHOW_FILENAME_FROM_DTA		  Near	 DGROUP:01A9
START				  Near	 DGROUP:0100
START_MASK			  Byte	 DGROUP:0317
WORKING_FOLDER			  Byte	 DGROUP:0297
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:023D
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:0226
_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:021E
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:020F
Turbo Assembler	 Version 4.1	    12/07/19 15:21:01	    Page 10
Symbol Table




Macro Name

CLEAR_MES
EXIT
GET_OFFSET
GET_TRANSITION
LOAD
PRINT
PRINT_RANGE
PUT
RESTORE
SET_TRANSITION
SET_TRANSITION_FOR_ALL
SET_TRANSITION_FOR_DIGITS
SET_TRANSITION_FOR_LETTERS
SET_TRANSITION_LENGTH_FROM_START
SET_ZERO
TO_NON_SPACE

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0384 Word	  Public  CODE
