Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 1
2tree.ASM



      1					 include macro.asm
1     2					 load macro args
1     3					     irp d,<args>
1     4						 push d
1     5					     endm
1     6					 endm
1     7
1     8					 restore macro args
1     9					     irp d,<args>
1    10						 pop d
1    11					     endm
1    12					 endm
1    13
1    14					 exit macro
1    15					     mov ah, 00h
1    16					     int 21h
1    17					 endm
1    18
1    19					 print macro buf
1    20						 mov ah, 09h
1    21						 mov dx, buf
1    22						 int 21h
1    23					 endm
1    24
1    25					 print_range macro args
1    26					     irp d,<args>
1    27						 print <offset d>
1    28					     endm
1    29					 endm
1    30
1    31					 get_offset macro state
1    32					     xor dx, dx
1    33					     xor ax, ax
1    34					     mov al, state
1    35					     shl ax, 8
1    36					 endm get_offset
1    37
1    38					 to_non_space macro addr
1    39					     local l1, l2
1    40					     mov si, addr
1    41					 l1:
1    42					     mov byte ptr al, [si]
1    43					     cmp al, 20h
1    44					     je	l2
1    45					     cmp al, 0
1    46					     je	l2
1    47					     inc si
1    48					     jmp l1
1    49					 l2:
1    50					     inc si
1    51					     mov ax, si
1    52					 endm
1    53
1    54					 set_transition	macro buf, from, to, char
1    55					     load<bx, dx>
1    56					     get_offset	from
1    57
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 2
2tree.ASM



1    58					     add ax, offset buf
1    59					     add ax, char
1    60
1    61					     mov bx, ax
1    62					     mov byte ptr [bx],	to
1    63					     restore<dx, bx>
1    64					 endm
1    65
1    66					 set_transition_length_from_start macro	buf, from, to, start, iterations
1    67					     local l1, end
1    68					     mov bx, start
1    69					     mov cx, iterations
1    70					 l1:
1    71					     cmp cx, 0
1    72					     je	end
1    73
1    74					     load <bx,cx>
1    75					     set_transition buf	from to	bx
1    76					     restore <cx,bx>
1    77
1    78					     inc bx
1    79					     dec cx
1    80					     jmp l1
1    81					 end:
1    82					 endm
1    83
1    84					 set_zero macro	state
1    85					     mov al, 0
1    86					     mov byte ptr [state], al
1    87					 endm
1    88
1    89					 set_transition_for_all	macro buf, from, to
1    90					     set_transition_length_from_start buf, from, to, 0,	255
1    91					 endm
1    92
1    93					 set_transition_for_digits macro buf, from, to
1    94					     set_transition_length_from_start buf, from, to, 30, 10
1    95					 endm
1    96
1    97					 set_transition_for_letters macro buf, from, to
1    98					     set_transition_length_from_start buf, from, to, 97, 26
1    99					     set_transition_length_from_start buf, from, to, 65, 26
1   100					 endm
1   101
1   102					 get_transition	macro buf, from, char
1   103					     load <dx>
1   104					     get_offset	from
1   105					     restore <dx>
1   106
1   107					     add ax, offset buf
1   108					     add ax, char
1   109
1   110					     mov bx, ax
1   111					     xor ax, ax
1   112					     mov al, byte ptr [bx]
1   113					 endm
1   114
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 3
2tree.ASM



1   115					 put macro from, to, position
1   116					     xor dx, dx
1   117					     xor bx, bx
1   118
1   119					     mov dx, offset to
1   120					     mov bl, byte ptr [position]
1   121					     add dx, bx
1   122
1   123					     mov bl, byte ptr [from]
1   124					     mov byte ptr [edx], bl
1   125					     inc [position]
1   126					 endm
1   127
1   128					 clear_mes macro mes, lastidx
1   129					     local l1, end
1   130					     mov bx, offset mes
1   131					     mov cl, byte ptr [lastidx]
1   132					     inc cl
1   133					 l1:
1   134					     cmp cl, 0
1   135					     je	end
1   136					     mov byte ptr [bx],	'$'
1   137					     inc bx
1   138					     dec cl
1   139					     jmp l1
1   140					 end:
1   141					     mov bl, 0
1   142					     mov byte ptr [lastidx], bl
1   143					 endm
    144
    145	    0000			 model tiny
    146					 .386
    147	    0000			 .code
    148					 org 100h
    149	    0100			 start:
    150	    0100  E8 00F3		     call save_cwd
    151	    0103  B8 0362r		     mov ax, offset dta
    152	    0106  50			     push ax
    153	    0107  E8 00E2		     call set_dta
    154	    010A  E8 0058		     call parse_command_line
    155	    010D  B8 02E2r		     mov ax, offset root_folder
    156	    0110  50			     push ax
    157	    0111  E8 00BD		     call cd
    158	    0114  B8 029Ar		     mov ax, offset file_mask
    159	    0117  50			     push ax
    160	    0118  E8 0007		     call list_subfiles
    161	    011B  B8 02A0r		     mov ax, offset folder_mask
    162	    011E  50			     push ax
    163	    011F  E8 0000		     call list_subfiles
    164
    165	    0122			 list_subfiles:
    166	    0122  5B			     pop bx
    167	    0123  58			     pop ax ; filemask offset
    168	    0124  53			     push bx
    169					     ; mov ax, offset file_mask
    170	    0125  50			     push ax
    171	    0126  E8 007E		     call find_first
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 4
2tree.ASM



    172	    0129  72 16			     jc	find_first_error
    173	    012B			 find_loop:
    174	    012B  E8 0086		     call show_filename_from_dta
    175	    012E  E8 0071		     call find_next
    176	    0131  73 F8			     jnc find_loop
    177	    0133  3A 06	0249r		     cmp al, byte ptr [no_more_files]
    178	    0137  75 1A			     jne find_next_error
    179	    0139			 program_end:
    180	    0139  B8 02A2r		     mov ax, offset working_folder
    181	    013C  50			     push ax
    182	    013D  E8 0091		     call cd
    183	    0140  C3			     ret
    184
    185	    0141			 find_first_error:
    186					     print_range <find_first_fails, newline>
2   187						 print <offset find_first_fails>
3   188	    0141  B4 09				 mov ah, 09h
3   189	    0143  BA 0262r			 mov dx, offset	find_first_fails
3   190	    0146  CD 21				 int 21h
2   191						 print <offset newline>
3   192	    0148  B4 09				 mov ah, 09h
3   193	    014A  BA 038Dr			 mov dx, offset	newline
3   194	    014D  CD 21				 int 21h
    195					     exit
1   196	    014F  B4 00			     mov ah, 00h
1   197	    0151  CD 21			     int 21h
    198	    0153			 find_next_error:
    199					     print_range <find_next_fails, newline>
2   200						 print <offset find_next_fails>
3   201	    0153  B4 09				 mov ah, 09h
3   202	    0155  BA 027Er			 mov dx, offset	find_next_fails
3   203	    0158  CD 21				 int 21h
2   204						 print <offset newline>
3   205	    015A  B4 09				 mov ah, 09h
3   206	    015C  BA 038Dr			 mov dx, offset	newline
3   207	    015F  CD 21				 int 21h
    208					     exit
1   209	    0161  B4 00			     mov ah, 00h
1   210	    0163  CD 21			     int 21h
    211
    212	    0165			 parse_command_line:
    213					     ;
    214					     ; prepare root folder
    215					     ;
    216	    0165  BE 0082		     mov si, 82h
    217	    0168  B9 0040		     mov cx, 64
    218	    016B  51			     push cx
    219	    016C  56			     push si
    220	    016D  E8 00BA		     call count_no_space_no_zero_letters
    221	    0170  8B C8			     mov cx, ax
    222	    0172  BE 0082		     mov si, 82h
    223	    0175  BF 02E2r		     mov di, offset root_folder
    224	    0178  F3> A4		     rep movsb
    225
    226	    017A			 parse_args:
    227	    017A  46			     inc si
    228	    017B  46			     inc si
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 5
2tree.ASM



    229	    017C  80 3C	64		     cmp byte ptr [si],	'd'
    230	    017F  74 07			     je	parse_d
    231	    0181  80 3C	66		     cmp byte ptr [si],	'f'
    232	    0184  74 0F			     je	parse_f
    233	    0186  EB 19			     jmp parse_end
    234	    0188			 parse_d:
    235					     ;
    236					     ; parse_deep level
    237					     ;
    238	    0188  46			     inc si
    239	    0189  46			     inc si
    240	    018A  8A 1C			     mov bl, byte ptr [si]
    241	    018C  80 EB	30		     sub bl, 30h	     ; to number
    242	    018F  88 1E	0299r		     mov byte ptr [deep_level],	bl
    243	    0193  EB E5			     jmp parse_args
    244	    0195			 parse_f:
    245	    0195  46			     inc si
    246	    0196  46			     inc si
    247	    0197  BF 029Br		     mov di, offset file_ext
    248	    019A  B9 0004		     mov cx, 4
    249	    019D  F3> A4		     rep movsb
    250	    019F  EB D9			     jmp parse_args
    251					     ;
    252					     ; parse file extension
    253					     ;
    254	    01A1			 parse_end:
    255	    01A1  C3			     ret
    256	    01A2			 find_next:
    257	    01A2  B4 4F			     mov ah, 4Fh
    258	    01A4  CD 21			     int 21h
    259
    260	    01A6  C3			     ret
    261
    262	    01A7			 find_first:
    263	    01A7  5B			     pop bx
    264	    01A8  5A			     pop dx		 ; filename spec
    265	    01A9  B9 0010		     mov cx, 10h	 ; include directories
    266	    01AC  53			     push bx
    267
    268	    01AD  33 C0			     xor ax, ax
    269	    01AF  B4 4E			     mov ah, 4Eh
    270	    01B1  CD 21			     int 21h
    271	    01B3  C3			     ret
    272	    01B4			 show_filename_from_dta:
    273	    01B4  B8 0380r		     mov ax, offset dta	+ 1Eh
    274	    01B7  B9 000D		     mov cx, 13
    275	    01BA  51			     push cx
    276	    01BB  50			     push ax
    277	    01BC  E8 006B		     call count_no_space_no_zero_letters
    278	    01BF  8B C8			     mov cx, ax
    279	    01C1  B8 0380r		     mov ax, offset dta	+ 1Eh
    280	    01C4  51			     push cx
    281	    01C5  50			     push ax
    282	    01C6  E8 004B		     call print_string_with_length
    283					     print_range <newline>
2   284						 print <offset newline>
3   285	    01C9  B4 09				 mov ah, 09h
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 6
2tree.ASM



3   286	    01CB  BA 038Dr			 mov dx, offset	newline
3   287	    01CE  CD 21				 int 21h
    288	    01D0  C3			     ret
    289	    01D1			 cd:
    290	    01D1  5B			     pop bx ; ret addr
    291	    01D2  5A			     pop dx ; root address
    292	    01D3  53			     push bx ; ret addr
    293
    294	    01D4  33 C0			     xor ax, ax
    295	    01D6  B4 3B			     mov ah, 3Bh
    296	    01D8  CD 21			     int 21h
    297
    298	    01DA  72 01			     jc	cd_error
    299	    01DC  C3			     ret
    300	    01DD			 cd_error:
    301					     print_range <cd_fails, newline>
2   302						 print <offset cd_fails>
3   303	    01DD  B4 09				 mov ah, 09h
3   304	    01DF  BA 024Ar			 mov dx, offset	cd_fails
3   305	    01E2  CD 21				 int 21h
2   306						 print <offset newline>
3   307	    01E4  B4 09				 mov ah, 09h
3   308	    01E6  BA 038Dr			 mov dx, offset	newline
3   309	    01E9  CD 21				 int 21h
    310	    01EB  C3			     ret
    311
    312	    01EC			 set_dta:
    313	    01EC  5B			     pop bx
    314	    01ED  5A			     pop dx			 ; dta address offset
    315	    01EE  53			     push bx
    316
    317	    01EF  33 C0			     xor ax, ax
    318	    01F1  B4 1A			     mov ah, 1Ah
    319	    01F3  CD 21			     int 21h
    320
    321	    01F5  C3			     ret
    322
    323	    01F6			 save_cwd:
    324	    01F6  BE 02A2r		     mov si, offset working_folder
    325
    326					     ;
    327					     ; save driver
    328					     ;
    329	    01F9  B4 19			     mov ah, 19h		 ; GET CURRENT DEFAULT DRIVE
    330	    01FB  CD 21			     int 21h
    331	    01FD  8A D0			     mov dl, al
    332	    01FF  80 C2	41		     add dl, 41h
    333	    0202  88 14			     mov byte ptr [si],	dl
    334	    0204  46			     inc si
    335	    0205  C6 04	3A		     mov byte ptr [si],	':'
    336	    0208  46			     inc si
    337	    0209  C6 04	5C		     mov byte ptr [si],	'\'
    338	    020C  46			     inc si
    339
    340					     ;
    341					     ; save folder
    342					     ;
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 7
2tree.ASM



    343	    020D  32 D2			     xor dl, dl			 ; Actual drive
    344	    020F  B4 47			     mov ah, 47h		 ; CWD - GET CURRENT DIRECTORY
    345	    0211  CD 21			     int 21h
    346	    0213  C3			     ret
    347	    0214			 print_string_with_length:
    348	    0214  5B			     pop bx ; ret address
    349	    0215  5E			     pop si ; string offset
    350	    0216  59			     pop cx ; string length
    351	    0217  53			     push bx; ret address
    352	    0218  33 C0			     xor ax, ax
    353	    021A			 _print_string_with_length_loop:
    354	    021A  B4 02			     mov ah, 02h
    355	    021C  8A 14			     mov dl, byte ptr [si]
    356	    021E  CD 21			     int 21h
    357	    0220  49			     dec cx
    358	    0221  46			     inc si
    359	    0222  83 F9	00		     cmp cx, 00h
    360	    0225  74 02			     je	_print_string_with_length_end
    361	    0227  EB F1			     jmp _print_string_with_length_loop
    362	    0229			 _print_string_with_length_end:
    363	    0229  C3			     ret
    364	    022A			 count_no_space_no_zero_letters:
    365	    022A  5B			     pop bx ; ret address
    366	    022B  5E			     pop si ; string offset
    367	    022C  59			     pop cx ; string length
    368	    022D  53			     push bx ; ret address
    369	    022E  B8 0000		     mov ax, 0
    370	    0231			 _count_non_space_symbols_loop:
    371	    0231  80 3C	20		     cmp byte ptr [si],	20h
    372	    0234  74 12			     je	_count_non_space_symbols_end
    373	    0236  80 3C	0D		     cmp byte ptr [si],	0Dh
    374	    0239  74 0D			     je	_count_non_space_symbols_end
    375	    023B  80 3C	00		     cmp byte ptr [si],	00h
    376	    023E  74 08			     je	_count_non_space_symbols_end
    377	    0240  3B C1			     cmp ax, cx
    378	    0242  74 04			     je	_count_non_space_symbols_end
    379	    0244  40			     inc ax
    380	    0245  46			     inc si
    381	    0246  EB E9			     jmp _count_non_space_symbols_loop
    382	    0248			 _count_non_space_symbols_end:
    383	    0248  C3			     ret
    384					 ;
    385					 ; error codes
    386					 ;
    387	    0249  12			 no_more_files db 18
    388					 ;
    389					 ; error messages
    390					 ;
    391	    024A  43 68	61 6E 67 65 20+	 cd_fails db 'Change directory fails.$'
    392		  64 69	72 65 63 74 6F+
    393		  72 79	20 66 61 69 6C+
    394		  73 2E	24
    395	    0262  66 69	6E 64 5F 66 69+	 find_first_fails db 'find_first filenames fails.$'
    396		  72 73	74 20 66 69 6C+
    397		  65 6E	61 6D 65 73 20+
    398		  66 61	69 6C 73 2E 24
    399	    027E  66 69	6E 64 5F 6E 65+	 find_next_fails db  'find_next	filenames fails.$'
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 8
2tree.ASM



    400		  78 74	20 66 69 6C 65+
    401		  6E 61	6D 65 73 20 66+
    402		  61 69	6C 73 2E 24
    403					 ;
    404					 ;   parse arguments
    405					 ;
    406	    0299  00			 deep_level db 0
    407	    029A  2A			 file_mask db '*'
    408	    029B  2E 74	78 74 00	 file_ext db '.txt', 00h
    409	    02A0  2A 00			 folder_mask db	'*', 00h
    410					 ;
    411					 ; strings
    412					 ;
    413	    02A2  40*(00)		 working_folder	db 64 dup(00h)
    414	    02E2  40*(00)		 root_folder db	64 dup(00h)
    415	    0322  40*(00)		 start_mask db 64 dup(00h)
    416	    0362  2B*(00)		 dta db	43 dup(0)
    417	    038D  0A 24			 newline db 0Ah, '$'
    418					 end start
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 9
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/07/19"
??FILENAME			  Text	 "2tree	  "
??TIME				  Text	 "15:28:44"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 2TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CD				  Near	 DGROUP:01D1
CD_ERROR			  Near	 DGROUP:01DD
CD_FAILS			  Byte	 DGROUP:024A
COUNT_NO_SPACE_NO_ZERO_LETTERS	  Near	 DGROUP:022A
DEEP_LEVEL			  Byte	 DGROUP:0299
DTA				  Byte	 DGROUP:0362
FILE_EXT			  Byte	 DGROUP:029B
FILE_MASK			  Byte	 DGROUP:029A
FIND_FIRST			  Near	 DGROUP:01A7
FIND_FIRST_ERROR		  Near	 DGROUP:0141
FIND_FIRST_FAILS		  Byte	 DGROUP:0262
FIND_LOOP			  Near	 DGROUP:012B
FIND_NEXT			  Near	 DGROUP:01A2
FIND_NEXT_ERROR			  Near	 DGROUP:0153
FIND_NEXT_FAILS			  Byte	 DGROUP:027E
FOLDER_MASK			  Byte	 DGROUP:02A0
LIST_SUBFILES			  Near	 DGROUP:0122
NEWLINE				  Byte	 DGROUP:038D
NO_MORE_FILES			  Byte	 DGROUP:0249
PARSE_ARGS			  Near	 DGROUP:017A
PARSE_COMMAND_LINE		  Near	 DGROUP:0165
PARSE_D				  Near	 DGROUP:0188
PARSE_END			  Near	 DGROUP:01A1
PARSE_F				  Near	 DGROUP:0195
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:0214
PROGRAM_END			  Near	 DGROUP:0139
ROOT_FOLDER			  Byte	 DGROUP:02E2
SAVE_CWD			  Near	 DGROUP:01F6
SET_DTA				  Near	 DGROUP:01EC
SHOW_FILENAME_FROM_DTA		  Near	 DGROUP:01B4
START				  Near	 DGROUP:0100
START_MASK			  Byte	 DGROUP:0322
WORKING_FOLDER			  Byte	 DGROUP:02A2
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:0248
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:0231
_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:0229
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:021A
Turbo Assembler	 Version 4.1	    12/07/19 15:28:44	    Page 10
Symbol Table




Macro Name

CLEAR_MES
EXIT
GET_OFFSET
GET_TRANSITION
LOAD
PRINT
PRINT_RANGE
PUT
RESTORE
SET_TRANSITION
SET_TRANSITION_FOR_ALL
SET_TRANSITION_FOR_DIGITS
SET_TRANSITION_FOR_LETTERS
SET_TRANSITION_LENGTH_FROM_START
SET_ZERO
TO_NON_SPACE

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  038F Word	  Public  CODE
