Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 1
tree.ASM



      1					 include tmacro.asm
1     2					 load macro args
1     3					     irp d,<args>
1     4						 push d
1     5					     endm
1     6					 endm
1     7
1     8					 restore macro args
1     9					     irp d,<args>
1    10						 pop d
1    11					     endm
1    12					 endm
1    13
1    14					 exit macro
1    15					     mov ah, 00h
1    16					     int 21h
1    17					 endm
1    18
1    19					 print macro buf
1    20						 mov ah, 09h
1    21						 mov dx, buf
1    22						 int 21h
1    23					 endm
1    24
1    25					 print_range macro args
1    26					     irp d,<args>
1    27						 print <offset d>
1    28					     endm
1    29					 endm
1    30
1    31					 push_fragment macro buf, length
1    32					     local l1
1    33					     lea di, buf
1    34					     mov cx, length
1    35					     xor bx, bx
1    36					 l1:
1    37					     mov bl, byte ptr [di]
1    38					     push bx
1    39					     inc di
1    40					     dec cx
1    41					     cmp cx, 0
1    42					     jne l1
1    43					 endm
1    44
1    45					 pop_fragment macro buf, length
1    46					     local l1
1    47					     lea di, buf
1    48					     mov cx, length
1    49					     add di, cx
1    50					     dec di
1    51					     xor bx, bx
1    52					 l1:
1    53					     pop bx
1    54					     mov byte ptr [di],	bl
1    55					     dec di
1    56					     dec cx
1    57					     cmp cx, 0
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 2
tree.ASM



1    58					     jne l1
1    59					 endm
1    60
1    61					 set_dta macro dta
1    62					     lea dx, dta
1    63					     xor ax, ax
1    64					     mov ah, 1Ah
1    65					     int 21h
1    66					 endm
1    67
1    68					 break_point macro arg
1    69					     load <arg>
1    70					     xor arg, arg
1    71					     xor arg, arg
1    72					     xor arg, arg
1    73					     xor arg, arg
1    74					     xor arg, arg
1    75					     xor arg, arg
1    76					     xor arg, arg
1    77					     xor arg, arg
1    78					     restore <arg>
1    79					 endm
     80
     81	    0000			 model tiny
     82					 .386
     83	    0000			 .code
     84					 org 100h
     85	    0100			 start:
     86	    0100  E8 0212		     call save_cwd
     87					     set_dta dta
1    88	    0103  BA 062Ar		     lea dx, dta
1    89	    0106  33 C0			     xor ax, ax
1    90	    0108  B4 1A			     mov ah, 1Ah
1    91	    010A  CD 21			     int 21h
     92	    010C  E8 0301		     call parse_command_line
     93
     94					     ;
     95					     ;	 start tree
     96					     ;
     97	    010F  B8 05AAr		     mov ax, offset root_folder
     98	    0112  B9 0000		     mov cx, 0
     99	    0115  51			     push cx
    100	    0116  50			     push ax
    101	    0117  E8 000B		     call list_subfiles_recursive_from
    102
    103					     ;
    104					     ;	 cd to start folder
    105					     ;
    106	    011A  B8 056Ar		     mov ax, offset working_folder
    107	    011D  50			     push ax
    108	    011E  E8 0289		     call cd
    109					     exit
1   110	    0121  B4 00			     mov ah, 00h
1   111	    0123  CD 21			     int 21h
    112
    113	    0125			 list_subfiles_recursive_from:
    114	    0125  5B			     pop bx	 ; ret address
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 3
tree.ASM



    115	    0126  58			     pop ax	 ; deep	level
    116	    0127  59			     pop cx	 ; root	folder offset
    117	    0128  53			     push bx
    118					     load <cx>
2   119	    0129  51				 push cx
    120	    012A  50			     push ax
    121	    012B  E8 027C		     call cd
    122					     restore <cx>
2   123	    012E  59				 pop cx
    124
    125					     ;
    126					     ; list subfolder
    127					     ;
    128	    012F  BE 0378r		     mov si, offset find_first_folder
    129	    0132  BB 0000		     mov bx, 0
    130	    0135  B8 0455r		     mov ax, offset folder_mask
    131					     load <cx>
2   132	    0138  51				 push cx
    133	    0139  56			     push si
    134	    013A  53			     push bx
    135	    013B  50			     push ax
    136	    013C  51			     push cx
    137	    013D  E8 0013		     call list_subfiles_recursive
    138					     restore <cx>
2   139	    0140  59				 pop cx
    140
    141					     ;
    142					     ; list files
    143					     ;
    144	    0141  BE 036Br		     mov si, offset find_first_file
    145	    0144  8B D8			     mov bx, ax
    146	    0146  B8 044Fr		     mov ax, offset file_mask
    147					     load <cx>
2   148	    0149  51				 push cx
    149	    014A  56			     push si
    150	    014B  53			     push bx
    151	    014C  50			     push ax
    152	    014D  51			     push cx
    153	    014E  E8 0002		     call list_subfiles_recursive
    154					     restore <cx>
2   155	    0151  59				 pop cx
    156	    0152  C3			     ret
    157
    158	    0153			 list_subfiles_recursive:
    159					     ;
    160					     ;	 save current files
    161					     ;
    162	    0153  E8 01F3		     call count_subfiles_here
    163	    0156  A3 0549r		     mov word ptr [current_max_entities], ax
    164
    165	    0159  5A			     pop dx
    166	    015A  59			     pop cx ; deep level
    167	    015B  58			     pop ax ; filemask offset
    168	    015C  5B			     pop bx ; current index
    169	    015D  5E			     pop si ; search address
    170	    015E  52			     push dx
    171
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 4
tree.ASM



    172					     load <cx, ax, bx, si>
2   173	    015F  51				 push cx
2   174	    0160  50				 push ax
2   175	    0161  53				 push bx
2   176	    0162  56				 push si
    177					     set_dta dta
1   178	    0163  BA 062Ar		     lea dx, dta
1   179	    0166  33 C0			     xor ax, ax
1   180	    0168  B4 1A			     mov ah, 1Ah
1   181	    016A  CD 21			     int 21h
    182					     restore <si, bx, ax, cx>
2   183	    016C  5E				 pop si
2   184	    016D  5B				 pop bx
2   185	    016E  58				 pop ax
2   186	    016F  59				 pop cx
    187
    188					     load <bx, cx>
2   189	    0170  53				 push bx
2   190	    0171  51				 push cx
    191	    0172  50			     push ax
    192	    0173  FF D6			     call si
    193	    0175  73 03			     jnc _list_subfiles_recursive_loop
    194	    0177  E9 00E6		     jmp _list_subfiles_recursive_end
    195	    017A			 _list_subfiles_recursive_loop:
    196					     restore <cx>
2   197	    017A  59				 pop cx
    198	    017B  51			     push cx
    199	    017C  E8 0107		     call is_valid_name
    200					     load <cx>
2   201	    017F  51				 push cx
    202	    0180  3D 0001		     cmp ax, 1
    203	    0183  0F 85	00CC		     jne _list_subfiles_recursive_next
    204
    205					     ;
    206					     ;	 increment current index in subfiles
    207					     ;
    208					     restore <cx, bx>
2   209	    0187  59				 pop cx
2   210	    0188  5B				 pop bx
    211	    0189  43			     inc bx
    212					     load <bx, cx>
2   213	    018A  53				 push bx
2   214	    018B  51				 push cx
    215	    018C  53			     push bx
    216	    018D  51			     push cx
    217	    018E  E8 010C		     call show_filename_from_dta
    218
    219					     ;
    220					     ;	 check if folder
    221					     ;
    222					     restore <cx>
2   223	    0191  59				 pop cx
    224					     load <cx>
2   225	    0192  51				 push cx
    226	    0193  B8 062Ar		     lea ax, dta
    227	    0196  50			     push ax
    228	    0197  51			     push cx
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 5
tree.ASM



    229	    0198  E8 01EF		     call is_folder
    230	    019B  3D 0001		     cmp ax, 1
    231	    019E  0F 85	00B1		     jne _list_subfiles_recursive_next
    232
    233					     ;
    234					     ;	 check deep level
    235					     ;
    236					     restore <cx>
2   237	    01A2  59				 pop cx
    238					     load <cx>
2   239	    01A3  51				 push cx
    240	    01A4  33 DB			     xor bx, bx
    241	    01A6  8A 1E	044Er		     mov bl, byte ptr [deep_level]
    242	    01AA  3B CB			     cmp cx, bx
    243	    01AC  0F 8D	00A3		     jge _list_subfiles_recursive_next
    244
    245					     ;
    246					     ;	 pseudographic hack
    247					     ;
    248					     restore <cx, bx>
2   249	    01B0  59				 pop cx
2   250	    01B1  5B				 pop bx
    251					     load <bx, cx>
2   252	    01B2  53				 push bx
2   253	    01B3  51				 push cx
    254
    255	    01B4  3B 1E	0549r		     cmp bx, word ptr [current_max_entities]
    256	    01B8  75 0A			     jne _list_subfiles_recursive_loop_pseudographic_hack
    257	    01BA  BB 054Fr		     mov bx, offset level_shift
    258	    01BD  03 D9			     add bx, cx
    259	    01BF  A0 055Ar		     mov al, byte ptr [space]
    260	    01C2  88 07			     mov byte ptr [bx],	al
    261	    01C4			 _list_subfiles_recursive_loop_pseudographic_hack:
    262	    01C4  8B C1			     mov ax, cx
    263					     ;
    264					     ;	 save dta
    265					     ;
    266					     push_fragment dta,	128
1   267	    01C6  BF 062Ar		     lea di, dta
1   268	    01C9  B9 0080		     mov cx, 128
1   269	    01CC  33 DB			     xor bx, bx
1   270	    01CE			 ??0000:
1   271	    01CE  8A 1D			     mov bl, byte ptr [di]
1   272	    01D0  53			     push bx
1   273	    01D1  47			     inc di
1   274	    01D2  49			     dec cx
1   275	    01D3  83 F9	00		     cmp cx, 0
1   276	    01D6  75 F6			     jne ??0000
    277	    01D8  8B C8			     mov cx, ax
    278
    279					     ;
    280					     ; start new search
    281					     ;
    282	    01DA  A1 0549r		     mov ax, word ptr [current_max_entities]
    283					     load <ax>
2   284	    01DD  50				 push ax
    285
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 6
tree.ASM



    286					     load <cx>
2   287	    01DE  51				 push cx
    288					     ;
    289					     ;	 cd to subfolder
    290					     ;
    291	    01DF  B8 062Ar		     lea ax, dta
    292	    01E2  05 001E		     add ax, 1Eh
    293
    294	    01E5  50			     push ax
    295	    01E6  E8 01C1		     call cd
    296					     restore <cx>
2   297	    01E9  59				 pop cx
    298
    299	    01EA  41			     inc cx
    300					     ;
    301					     ;	 list subfiles from subfolder
    302					     ;
    303					     load <cx>
2   304	    01EB  51				 push cx
    305	    01EC  BB 0000		     mov bx, 0
    306	    01EF  B8 044Fr		     mov ax, offset file_mask
    307	    01F2  BE 036Br		     mov si, offset find_first_file
    308
    309	    01F5  56			     push si
    310	    01F6  53			     push bx
    311	    01F7  50			     push ax
    312	    01F8  51			     push cx
    313	    01F9  E8 FF57		     call list_subfiles_recursive
    314					     restore <cx>
2   315	    01FC  59				 pop cx
    316
    317
    318					     ;
    319					     ;	 list subfolders from subfolder
    320					     ;
    321					     load <cx>
2   322	    01FD  51				 push cx
    323	    01FE  8B D8			     mov bx, ax
    324	    0200  B8 0455r		     mov ax, offset folder_mask
    325	    0203  BE 0378r		     mov si, offset find_first_folder
    326
    327	    0206  56			     push si
    328	    0207  53			     push bx
    329	    0208  50			     push ax
    330	    0209  51			     push cx
    331	    020A  E8 FF46		     call list_subfiles_recursive
    332					     restore <cx>
2   333	    020D  59				 pop cx
    334
    335					     ;
    336					     ;	 reverse pseudographic hack
    337					     ;
    338	    020E  BB 054Fr		     mov bx, offset level_shift
    339	    0211  03 D9			     add bx, cx
    340	    0213  A0 054Dr		     mov al, byte ptr [old_level_shift]
    341	    0216  88 07			     mov byte ptr [bx],	al
    342
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 7
tree.ASM



    343					     ;
    344					     ;	 cd back to this function
    345					     ;
    346	    0218  B8 0567r		     mov ax, offset parent_folder
    347	    021B  50			     push ax
    348	    021C  E8 018B		     call cd
    349
    350
    351					     restore <ax>
2   352	    021F  58				 pop ax
    353	    0220  A3 0549r		     mov word ptr [current_max_entities], ax
    354
    355					     break_point <ax>
1   356					     load <ax>
3   357	    0223  50				 push ax
1   358	    0224  33 C0			     xor ax, ax
1   359	    0226  33 C0			     xor ax, ax
1   360	    0228  33 C0			     xor ax, ax
1   361	    022A  33 C0			     xor ax, ax
1   362	    022C  33 C0			     xor ax, ax
1   363	    022E  33 C0			     xor ax, ax
1   364	    0230  33 C0			     xor ax, ax
1   365	    0232  33 C0			     xor ax, ax
1   366					     restore <ax>
3   367	    0234  58				 pop ax
    368					     ;
    369					     ;	 restore dta
    370					     ;
    371					     pop_fragment dta, 128
1   372	    0235  BF 062Ar		     lea di, dta
1   373	    0238  B9 0080		     mov cx, 128
1   374	    023B  03 F9			     add di, cx
1   375	    023D  4F			     dec di
1   376	    023E  33 DB			     xor bx, bx
1   377	    0240			 ??0001:
1   378	    0240  5B			     pop bx
1   379	    0241  88 1D			     mov byte ptr [di],	bl
1   380	    0243  4F			     dec di
1   381	    0244  49			     dec cx
1   382	    0245  83 F9	00		     cmp cx, 0
1   383	    0248  75 F6			     jne ??0001
    384					     set_dta dta
1   385	    024A  BA 062Ar		     lea dx, dta
1   386	    024D  33 C0			     xor ax, ax
1   387	    024F  B4 1A			     mov ah, 1Ah
1   388	    0251  CD 21			     int 21h
    389
    390	    0253			 _list_subfiles_recursive_next:
    391	    0253  E8 012F		     call find_next
    392	    0256  0F 83	FF20		     jnc _list_subfiles_recursive_loop
    393	    025A  3A 06	0510r		     cmp al, byte ptr [no_more_files]
    394	    025E  75 14			     jne find_next_error
    395	    0260			 _list_subfiles_recursive_end:
    396					     restore <cx, bx>
2   397	    0260  59				 pop cx
2   398	    0261  5B				 pop bx
    399	    0262  8B C3			     mov ax, bx
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 8
tree.ASM



    400	    0264  C3			     ret
    401
    402
    403
    404	    0265			 find_first_error:
    405					     print_range <find_first_fails, newline>
2   406						 print <offset find_first_fails>
3   407	    0265  B4 09				 mov ah, 09h
3   408	    0267  BA 0512r			 mov dx, offset	find_first_fails
3   409	    026A  CD 21				 int 21h
2   410						 print <offset newline>
3   411	    026C  B4 09				 mov ah, 09h
3   412	    026E  BA 03EFr			 mov dx, offset	newline
3   413	    0271  CD 21				 int 21h
    414	    0273  C3			     ret
    415	    0274			 find_next_error:
    416					     print_range <find_next_fails, newline>
2   417						 print <offset find_next_fails>
3   418	    0274  B4 09				 mov ah, 09h
3   419	    0276  BA 052Er			 mov dx, offset	find_next_fails
3   420	    0279  CD 21				 int 21h
2   421						 print <offset newline>
3   422	    027B  B4 09				 mov ah, 09h
3   423	    027D  BA 03EFr			 mov dx, offset	newline
3   424	    0280  CD 21				 int 21h
    425					     exit
1   426	    0282  B4 00			     mov ah, 00h
1   427	    0284  CD 21			     int 21h
    428
    429
    430	    0286			 is_valid_name:
    431	    0286  5B			     pop bx
    432	    0287  59			     pop cx	 ; deep	level
    433	    0288  53			     push bx
    434
    435	    0289  B8 062Ar		     lea ax, dta
    436	    028C  05 001E		     add ax, 1Eh
    437	    028F  8B D8			     mov bx, ax
    438	    0291  B8 0001		     mov ax, 1
    439	    0294  80 3F	2E		     cmp byte ptr [bx],	'.'
    440	    0297  75 03			     jne _is_valid_name_end
    441	    0299  B8 0000		     mov ax, 0
    442	    029C			 _is_valid_name_end:
    443	    029C  C3			     ret
    444
    445	    029D			 show_filename_from_dta:
    446	    029D  5B			     pop bx
    447	    029E  59			     pop cx  ; deep level
    448	    029F  58			     pop ax  ; entity count
    449	    02A0  53			     push bx
    450
    451	    02A1			 _show_filename_from_dta_valid_name:
    452					     ;
    453					     ;	 pseudo	graphic	prefix
    454					     ;
    455					     load <ax>
2   456	    02A1  50				 push ax
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 9
tree.ASM



    457	    02A2  B8 062Ar		     lea ax, dta
    458
    459	    02A5  05 001E		     add ax, 1Eh
    460	    02A8  8B D8			     mov bx, ax
    461					     restore <ax>
2   462	    02AA  58				 pop ax
    463
    464					     load <cx, bx>
2   465	    02AB  51				 push cx
2   466	    02AC  53				 push bx
    467	    02AD  50			     push ax	 ; entity count
    468	    02AE  51			     push cx	 ; deep	level
    469	    02AF  E8 001E		     call print_pseudographic_prefix
    470					     restore <bx, cx>
2   471	    02B2  5B				 pop bx
2   472	    02B3  59				 pop cx
    473
    474					     load <bx>
2   475	    02B4  53				 push bx
    476	    02B5  B9 000D		     mov cx, 13
    477	    02B8  51			     push cx
    478	    02B9  53			     push bx
    479	    02BA  E8 0134		     call count_no_space_no_zero_letters
    480	    02BD  8B C8			     mov cx, ax
    481					     restore <bx>
2   482	    02BF  5B				 pop bx
    483	    02C0  51			     push cx
    484	    02C1  53			     push bx
    485	    02C2  E8 006E		     call print_string_with_length
    486					     print_range <newline>
2   487						 print <offset newline>
3   488	    02C5  B4 09				 mov ah, 09h
3   489	    02C7  BA 03EFr			 mov dx, offset	newline
3   490	    02CA  CD 21				 int 21h
    491	    02CC  B8 0001		     mov ax, 1
    492	    02CF  C3			     ret
    493
    494	    02D0			 print_pseudographic_prefix:
    495	    02D0  5B			     pop bx
    496	    02D1  59			     pop cx	 ; deep	level
    497	    02D2  58			     pop ax	 ; entity count
    498	    02D3  53			     push bx
    499
    500	    02D4  83 F9	00		     cmp cx, 0
    501	    02D7  74 0C			     je	_print_pseudographic_prefix_zero_level
    502					     load <cx, ax>
2   503	    02D9  51				 push cx
2   504	    02DA  50				 push ax
    505	    02DB  B8 054Fr		     mov ax, offset level_shift
    506
    507	    02DE  51			     push cx
    508	    02DF  50			     push ax
    509	    02E0  E8 0050		     call print_string_with_length
    510					     restore <ax, cx>
2   511	    02E3  58				 pop ax
2   512	    02E4  59				 pop cx
    513	    02E5			 _print_pseudographic_prefix_zero_level:
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 10
tree.ASM



    514
    515	    02E5  8B 1E	0549r		     mov bx, word ptr [current_max_entities]
    516	    02E9  3A C3			     cmp al, bl
    517	    02EB  74 1E			     je	_print_pseudographic_prefix_zero_level_end
    518	    02ED  3D 0001		     cmp ax, 1
    519	    02F0  75 10			     jne _print_pseudographic_prefix_zero_level_middle
    520	    02F2  83 F9	00		     cmp cx, 0
    521	    02F5  74 02			     je	_print_pseudographic_prefix_zero_level_first
    522	    02F7  EB 09			     jmp _print_pseudographic_prefix_zero_level_middle
    523	    02F9			 _print_pseudographic_prefix_zero_level_first:
    524					     print_range <first_file_char>
2   525						 print <offset first_file_char>
3   526	    02F9  B4 09				 mov ah, 09h
3   527	    02FB  BA 0561r			 mov dx, offset	first_file_char
3   528	    02FE  CD 21				 int 21h
    529	    0300  EB 12			     jmp _print_pseudographic_prefix_end
    530	    0302			 _print_pseudographic_prefix_zero_level_middle:
    531					     print_range <middle_file_char>
2   532						 print <offset middle_file_char>
3   533	    0302  B4 09				 mov ah, 09h
3   534	    0304  BA 0563r			 mov dx, offset	middle_file_char
3   535	    0307  CD 21				 int 21h
    536	    0309  EB 09			     jmp _print_pseudographic_prefix_end
    537	    030B			 _print_pseudographic_prefix_zero_level_end:
    538					     print_range <end_file_char>
2   539						 print <offset end_file_char>
3   540	    030B  B4 09				 mov ah, 09h
3   541	    030D  BA 0565r			 mov dx, offset	end_file_char
3   542	    0310  CD 21				 int 21h
    543	    0312  EB 00			     jmp _print_pseudographic_prefix_end
    544	    0314			 _print_pseudographic_prefix_end:
    545	    0314  C3			     ret
    546
    547
    548	    0315			 save_cwd:
    549	    0315  BE 056Ar		     mov si, offset working_folder
    550
    551					     ;
    552					     ; save driver
    553					     ;
    554	    0318  B4 19			     mov ah, 19h		 ; GET CURRENT DEFAULT DRIVE
    555	    031A  CD 21			     int 21h
    556	    031C  8A D0			     mov dl, al
    557	    031E  80 C2	41		     add dl, 41h
    558	    0321  88 14			     mov byte ptr [si],	dl
    559	    0323  46			     inc si
    560	    0324  C6 04	3A		     mov byte ptr [si],	':'
    561	    0327  46			     inc si
    562	    0328  C6 04	5C		     mov byte ptr [si],	'\'
    563	    032B  46			     inc si
    564
    565					     ;
    566					     ; save folder
    567					     ;
    568	    032C  32 D2			     xor dl, dl			 ; Actual drive
    569	    032E  B4 47			     mov ah, 47h		 ; CWD - GET CURRENT DIRECTORY
    570	    0330  CD 21			     int 21h
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 11
tree.ASM



    571	    0332  C3			     ret
    572	    0333			 print_string_with_length:
    573	    0333  5B			     pop bx ; ret address
    574	    0334  5E			     pop si ; string offset
    575	    0335  59			     pop cx ; string length
    576	    0336  53			     push bx; ret address
    577	    0337  33 C0			     xor ax, ax
    578	    0339			 _print_string_with_length_loop:
    579	    0339  B4 02			     mov ah, 02h
    580	    033B  8A 14			     mov dl, byte ptr [si]
    581	    033D  CD 21			     int 21h
    582	    033F  49			     dec cx
    583	    0340  46			     inc si
    584	    0341  83 F9	00		     cmp cx, 00h
    585	    0344  74 02			     je	_print_string_with_length_end
    586	    0346  EB F1			     jmp _print_string_with_length_loop
    587	    0348			 _print_string_with_length_end:
    588	    0348  C3			     ret
    589
    590	    0349			 count_subfiles_here:
    591	    0349  B8 044Fr		     mov ax, offset file_mask
    592	    034C  BE 036Br		     mov si, offset find_first_file
    593
    594	    034F  50			     push ax
    595	    0350  56			     push si
    596	    0351  E8 0107		     call count_subfiles_here_by_mask
    597					     load <ax>
2   598	    0354  50				 push ax
    599	    0355  B8 0455r		     mov ax, offset folder_mask
    600	    0358  BE 0378r		     mov si, offset find_first_folder
    601
    602	    035B  50			     push ax
    603	    035C  56			     push si
    604	    035D  E8 00FB		     call count_subfiles_here_by_mask
    605	    0360  8B D8			     mov bx, ax
    606					     restore <ax>
2   607	    0362  58				 pop ax
    608	    0363  03 D8			     add bx, ax
    609	    0365  8B C3			     mov ax, bx
    610	    0367  A3 0549r		     mov word ptr [current_max_entities], ax
    611	    036A  C3			     ret
    612
    613
    614					 include dtafunc.asm
1   615					 include filefunc.asm
2   616	    036B			 find_first_file:
2   617	    036B  5B			     pop bx
2   618	    036C  5A			     pop dx		; filename spec
2   619	    036D  B9 000F		     mov cx, 0fh	 ; include files
2   620	    0370  53			     push bx
2   621
2   622	    0371  33 C0			     xor ax, ax
2   623	    0373  B4 4E			     mov ah, 4Eh
2   624	    0375  CD 21			     int 21h
2   625	    0377  C3			     ret
2   626
2   627	    0378			 find_first_folder:
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 12
tree.ASM



2   628	    0378  5B			     pop bx
2   629	    0379  5A			     pop dx		 ; filename spec
2   630	    037A  B9 0010		     mov cx, 10h	 ; include directories
2   631	    037D  53			     push bx
2   632
2   633	    037E  33 C0			     xor ax, ax
2   634	    0380  B4 4E			     mov ah, 4Eh
2   635	    0382  CD 21			     int 21h
2   636	    0384  C3			     ret
2   637
2   638	    0385			 find_next:
2   639	    0385  B4 4F			     mov ah, 4Fh
2   640	    0387  CD 21			     int 21h
2   641
2   642	    0389  C3			     ret
2   643
2   644	    038A			 is_folder:
2   645	    038A  5B			     pop bx
2   646	    038B  59			     pop cx
2   647	    038C  58			     pop ax ; dta address
2   648	    038D  53			     push bx
2   649
2   650	    038E  05 0015		     add ax, 15h
2   651	    0391  8B D8			     mov bx, ax
2   652	    0393  8A 1F			     mov bl, byte ptr [bx]
2   653	    0395  80 E3	10		     and bl, 10h
2   654	    0398  80 FB	10		     cmp bl, 10h
2   655	    039B  74 02			     je	_is_folder_true
2   656	    039D  75 05			     jne _is_folder_false
2   657	    039F			 _is_folder_true:
2   658	    039F  B8 0001		     mov ax, 1
2   659	    03A2  EB 05			     jmp _is_folder_end
2   660	    03A4			 _is_folder_false:
2   661	    03A4  B8 0000		     mov ax, 0
2   662	    03A7  EB 00			     jmp _is_folder_end
2   663	    03A9			 _is_folder_end:
2   664	    03A9  C3			     ret
2   665
2   666	    03AA			 cd:
2   667	    03AA  5B			     pop bx ; ret addr
2   668	    03AB  5A			     pop dx ; root address
2   669	    03AC  53			     push bx ; ret addr
2   670
2   671					     load <dx>
4   672	    03AD  52				 push dx
2   673	    03AE  33 C0			     xor ax, ax
2   674	    03B0  B4 3B			     mov ah, 3Bh
2   675	    03B2  CD 21			     int 21h
2   676
2   677	    03B4  72 02			     jc	cd_error
2   678					     restore <dx>
4   679	    03B6  5A				 pop dx
2   680	    03B7  C3			     ret
2   681	    03B8			 cd_error:
2   682					     print_range <cd_fails, newline>
4   683						 print <offset cd_fails>
5   684	    03B8  B4 09				 mov ah, 09h
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 13
tree.ASM



5   685	    03BA  BA 03D7r			 mov dx, offset	cd_fails
5   686	    03BD  CD 21				 int 21h
4   687						 print <offset newline>
5   688	    03BF  B4 09				 mov ah, 09h
5   689	    03C1  BA 03EFr			 mov dx, offset	newline
5   690	    03C4  CD 21				 int 21h
2   691					     restore <dx>
4   692	    03C6  5A				 pop dx
2   693
2   694	    03C7  B4 09				 mov ah, 09h
2   695	    03C9  CD 21			     int 21h
2   696
2   697					     print_range <newline>
4   698						 print <offset newline>
5   699	    03CB  B4 09				 mov ah, 09h
5   700	    03CD  BA 03EFr			 mov dx, offset	newline
5   701	    03D0  CD 21				 int 21h
2   702					     exit
3   703	    03D2  B4 00			     mov ah, 00h
3   704	    03D4  CD 21			     int 21h
2   705	    03D6  C3			     ret
2   706
2   707
2   708	    03D7  43 68	61 6E 67 65 20+	 cd_fails db 'Change directory fails.$'
    709		  64 69	72 65 63 74 6F+
    710		  72 79	20 66 61 69 6C+
    711		  73 2E	24
2   712	    03EF  0A 24			 newline db 0Ah, '$'
1   713					 include clfunc.asm
2   714	    03F1			 count_no_space_no_zero_letters:
2   715	    03F1  5B			     pop bx ; ret address
2   716	    03F2  5E			     pop si ; string offset
2   717	    03F3  59			     pop cx ; string length
2   718	    03F4  53			     push bx ; ret address
2   719	    03F5  B8 0000		     mov ax, 0
2   720	    03F8			 _count_non_space_symbols_loop:
2   721	    03F8  80 3C	20		     cmp byte ptr [si],	20h
2   722	    03FB  74 12			     je	_count_non_space_symbols_end
2   723	    03FD  80 3C	0D		     cmp byte ptr [si],	0Dh
2   724	    0400  74 0D			     je	_count_non_space_symbols_end
2   725	    0402  80 3C	00		     cmp byte ptr [si],	00h
2   726	    0405  74 08			     je	_count_non_space_symbols_end
2   727	    0407  3B C1			     cmp ax, cx
2   728	    0409  74 04			     je	_count_non_space_symbols_end
2   729	    040B  40			     inc ax
2   730	    040C  46			     inc si
2   731	    040D  EB E9			     jmp _count_non_space_symbols_loop
2   732	    040F			 _count_non_space_symbols_end:
2   733	    040F  C3			     ret
2   734
2   735	    0410			 parse_command_line:
2   736					     ;
2   737					     ; prepare root folder
2   738					     ;
2   739	    0410  BE 0082		     mov si, 82h
2   740	    0413  B9 0040		     mov cx, 64
2   741	    0416  51			     push cx
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 14
tree.ASM



2   742	    0417  56			     push si
2   743	    0418  E8 FFD6		     call count_no_space_no_zero_letters
2   744	    041B  8B C8			     mov cx, ax
2   745	    041D  BE 0082		     mov si, 82h
2   746	    0420  BF 05AAr		     mov di, offset root_folder
2   747	    0423  F3> A4		     rep movsb
2   748
2   749	    0425			 parse_args:
2   750	    0425  46			     inc si
2   751	    0426  46			     inc si
2   752	    0427  80 3C	64		     cmp byte ptr [si],	'd'
2   753	    042A  74 07			     je	parse_d
2   754	    042C  80 3C	66		     cmp byte ptr [si],	'f'
2   755	    042F  74 10			     je	parse_f
2   756	    0431  EB 1A			     jmp parse_end
2   757	    0433			 parse_d:
2   758					     ;
2   759					     ; parse_deep level
2   760					     ;
2   761	    0433  46			     inc si
2   762	    0434  46			     inc si
2   763	    0435  8A 1C			     mov bl, byte ptr [si]
2   764	    0437  80 EB	30		     sub bl, 30h	     ; to number
2   765	    043A  88 1E	044Er		     mov byte ptr [deep_level],	bl
2   766	    043E  46			     inc si
2   767	    043F  EB E4			     jmp parse_args
2   768	    0441			 parse_f:
2   769					     ;
2   770					     ; parse file extension
2   771					     ;
2   772	    0441  46			     inc si
2   773	    0442  46			     inc si
2   774	    0443  BF 0450r		     mov di, offset file_ext
2   775	    0446  B9 0004		     mov cx, 4
2   776	    0449  F3> A4		     rep movsb
2   777	    044B  EB D8			     jmp parse_args
2   778	    044D			 parse_end:
2   779	    044D  C3			     ret
2   780
2   781					 ;
2   782					 ;   parse arguments
2   783					 ;
2   784	    044E  01			 deep_level db 1
2   785	    044F  2A			 file_mask db '*'
2   786	    0450  2E 2A	00 00 00	 file_ext db '.*', 00h,	00h, 00h
2   787	    0455  2A 00			 folder_mask db	'*', 00h
2   788	    0457  2A 2E	2A 00		 all_files db '*.*', 00h
1   789					 include tmacro.asm
2   790					 load macro args
2   791					     irp d,<args>
2   792						 push d
2   793					     endm
2   794					 endm
2   795
2   796					 restore macro args
2   797					     irp d,<args>
2   798						 pop d
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 15
tree.ASM



2   799					     endm
2   800					 endm
2   801
2   802					 exit macro
2   803					     mov ah, 00h
2   804					     int 21h
2   805					 endm
2   806
2   807					 print macro buf
2   808						 mov ah, 09h
2   809						 mov dx, buf
2   810						 int 21h
2   811					 endm
2   812
2   813					 print_range macro args
2   814					     irp d,<args>
2   815						 print <offset d>
2   816					     endm
2   817					 endm
2   818
2   819					 push_fragment macro buf, length
2   820					     local l1
2   821					     lea di, buf
2   822					     mov cx, length
2   823					     xor bx, bx
2   824					 l1:
2   825					     mov bl, byte ptr [di]
2   826					     push bx
2   827					     inc di
2   828					     dec cx
2   829					     cmp cx, 0
2   830					     jne l1
2   831					 endm
2   832
2   833					 pop_fragment macro buf, length
2   834					     local l1
2   835					     lea di, buf
2   836					     mov cx, length
2   837					     add di, cx
2   838					     dec di
2   839					     xor bx, bx
2   840					 l1:
2   841					     pop bx
2   842					     mov byte ptr [di],	bl
2   843					     dec di
2   844					     dec cx
2   845					     cmp cx, 0
2   846					     jne l1
2   847					 endm
2   848
2   849					 set_dta macro dta
2   850					     lea dx, dta
2   851					     xor ax, ax
2   852					     mov ah, 1Ah
2   853					     int 21h
2   854					 endm
2   855
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 16
tree.ASM



2   856					 break_point macro arg
2   857					     load <arg>
2   858					     xor arg, arg
2   859					     xor arg, arg
2   860					     xor arg, arg
2   861					     xor arg, arg
2   862					     xor arg, arg
2   863					     xor arg, arg
2   864					     xor arg, arg
2   865					     xor arg, arg
2   866					     restore <arg>
2   867					 endm
1   868
1   869
1   870	    045B			 count_subfiles_here_by_mask:
1   871	    045B  5B			     pop bx
1   872	    045C  5E			     pop si		 ; find_first address
1   873	    045D  58			     pop ax		 ; mask	address
1   874	    045E  53			     push bx
1   875
1   876					     load <ax, si>
3   877	    045F  50				 push ax
3   878	    0460  56				 push si
1   879					     set_dta count_dta
2   880	    0461  BA 0490r		     lea dx, count_dta
2   881	    0464  33 C0			     xor ax, ax
2   882	    0466  B4 1A			     mov ah, 1Ah
2   883	    0468  CD 21			     int 21h
1   884					     restore <si, ax>
3   885	    046A  5E				 pop si
3   886	    046B  58				 pop ax
1   887
1   888	    046C  B9 0000		     mov cx, 0
1   889					     load <cx>
3   890	    046F  51				 push cx
1   891	    0470  50			     push ax
1   892	    0471  FF D6			     call si
1   893	    0473  72 17			     jc	_count_subfiles_from_end
1   894	    0475			 _count_subfiles_from_loop:
1   895	    0475  B8 0490r		     lea ax, count_dta
1   896	    0478  05 001E		     add ax, 1Eh
1   897	    047B  8B D8			     mov bx, ax
1   898	    047D  80 3F	2E		     cmp byte ptr [bx],	'.'
1   899	    0480  74 03			     je	_count_subfiles_from_loop_next
1   900
1   901					     restore <cx>
3   902	    0482  59				 pop cx
1   903	    0483  41			     inc cx
1   904					     load <cx>
3   905	    0484  51				 push cx
1   906	    0485			 _count_subfiles_from_loop_next:
1   907	    0485  E8 FEFD		     call find_next
1   908	    0488  72 02			     jc	_count_subfiles_from_end
1   909
1   910	    048A  EB E9			     jmp _count_subfiles_from_loop
1   911	    048C			 _count_subfiles_from_end:
1   912					     restore <cx>
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 17
tree.ASM



3   913	    048C  59				 pop cx
1   914	    048D  8B C1			     mov ax, cx
1   915	    048F  C3			     ret
1   916
1   917	    0490  80*(00)		 count_dta db 128 dup(0)
    918
    919					 ;
    920					 ; error codes
    921					 ;
    922	    0510  12			 no_more_files db 18
    923	    0511  2B			 dta_len db 2bh
    924
    925					 ;
    926					 ; error messages
    927					 ;
    928	    0512  66 69	6E 64 5F 66 69+	 find_first_fails db 'find_first filenames fails.$'
    929		  72 73	74 20 66 69 6C+
    930		  65 6E	61 6D 65 73 20+
    931		  66 61	69 6C 73 2E 24
    932	    052E  66 69	6E 64 5F 6E 65+	 find_next_fails db  'find_next	filenames fails.$'
    933		  78 74	20 66 69 6C 65+
    934		  6E 61	6D 65 73 20 66+
    935		  61 69	6C 73 2E 24
    936
    937					 ;
    938					 ; int variables
    939					 ;
    940	    0549  0000			 current_max_entities dw 0
    941	    054B  0000			 current_id_entity dw 0
    942
    943
    944
    945					 ;
    946					 ;   pseudographic
    947					 ;
    948	    054D  B3 24			 old_level_shift db 179, '$'
    949	    054F  0A*(B3) 24		 level_shift db	10 dup(179), '$'
    950	    055A  ?? 20	24		 space db, 32, '$'
    951
    952	    055D  C3 24			 zero_first_file db 195, '$'
    953	    055F  C0 24			 zero_end_file db 192, '$'
    954
    955	    0561  C2 24			 first_file_char db 194, '$'
    956	    0563  C3 24			 middle_file_char db 195, '$'
    957	    0565  C0 24			 end_file_char db 192, '$'
    958
    959					 ;
    960					 ; strings
    961					 ;
    962	    0567  2E 2E	00		 parent_folder db '..',	00h
    963	    056A  40*(00)		 working_folder	db 64 dup(00h)
    964	    05AA  40*(00)		 root_folder db	64 dup(00h)
    965	    05EA  40*(00)		 start_mask db 64 dup(00h)
    966	    062A  80*(00)		 dta db	128 dup(0)
    967					 end start
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 18
Symbol Table




Symbol Name			  Type	 Value

??0000				  Near	 DGROUP:01CE
??0001				  Near	 DGROUP:0240
??DATE				  Text	 "12/15/19"
??FILENAME			  Text	 "tree	  "
??TIME				  Text	 "15:04:13"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ALL_FILES			  Byte	 DGROUP:0457
CD				  Near	 DGROUP:03AA
CD_ERROR			  Near	 DGROUP:03B8
CD_FAILS			  Byte	 DGROUP:03D7
COUNT_DTA			  Byte	 DGROUP:0490
COUNT_NO_SPACE_NO_ZERO_LETTERS	  Near	 DGROUP:03F1
COUNT_SUBFILES_HERE		  Near	 DGROUP:0349
COUNT_SUBFILES_HERE_BY_MASK	  Near	 DGROUP:045B
CURRENT_ID_ENTITY		  Word	 DGROUP:054B
CURRENT_MAX_ENTITIES		  Word	 DGROUP:0549
DEEP_LEVEL			  Byte	 DGROUP:044E
DTA				  Byte	 DGROUP:062A
DTA_LEN				  Byte	 DGROUP:0511
END_FILE_CHAR			  Byte	 DGROUP:0565
FILE_EXT			  Byte	 DGROUP:0450
FILE_MASK			  Byte	 DGROUP:044F
FIND_FIRST_ERROR		  Near	 DGROUP:0265
FIND_FIRST_FAILS		  Byte	 DGROUP:0512
FIND_FIRST_FILE			  Near	 DGROUP:036B
FIND_FIRST_FOLDER		  Near	 DGROUP:0378
FIND_NEXT			  Near	 DGROUP:0385
FIND_NEXT_ERROR			  Near	 DGROUP:0274
FIND_NEXT_FAILS			  Byte	 DGROUP:052E
FIRST_FILE_CHAR			  Byte	 DGROUP:0561
FOLDER_MASK			  Byte	 DGROUP:0455
IS_FOLDER			  Near	 DGROUP:038A
IS_VALID_NAME			  Near	 DGROUP:0286
LEVEL_SHIFT			  Byte	 DGROUP:054F
LIST_SUBFILES_RECURSIVE		  Near	 DGROUP:0153
LIST_SUBFILES_RECURSIVE_FROM	  Near	 DGROUP:0125
MIDDLE_FILE_CHAR		  Byte	 DGROUP:0563
NEWLINE				  Byte	 DGROUP:03EF
NO_MORE_FILES			  Byte	 DGROUP:0510
OLD_LEVEL_SHIFT			  Byte	 DGROUP:054D
PARENT_FOLDER			  Byte	 DGROUP:0567
PARSE_ARGS			  Near	 DGROUP:0425
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 19
Symbol Table



PARSE_COMMAND_LINE		  Near	 DGROUP:0410
PARSE_D				  Near	 DGROUP:0433
PARSE_END			  Near	 DGROUP:044D
PARSE_F				  Near	 DGROUP:0441
PRINT_PSEUDOGRAPHIC_PREFIX	  Near	 DGROUP:02D0
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:0333
ROOT_FOLDER			  Byte	 DGROUP:05AA
SAVE_CWD			  Near	 DGROUP:0315
SHOW_FILENAME_FROM_DTA		  Near	 DGROUP:029D
SPACE				  Byte	 DGROUP:055A
START				  Near	 DGROUP:0100
START_MASK			  Byte	 DGROUP:05EA
WORKING_FOLDER			  Byte	 DGROUP:056A
ZERO_END_FILE			  Byte	 DGROUP:055F
ZERO_FIRST_FILE			  Byte	 DGROUP:055D
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:040F
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:03F8
_COUNT_SUBFILES_FROM_END	  Near	 DGROUP:048C
_COUNT_SUBFILES_FROM_LOOP	  Near	 DGROUP:0475
_COUNT_SUBFILES_FROM_LOOP_NEXT	  Near	 DGROUP:0485
_IS_FOLDER_END			  Near	 DGROUP:03A9
_IS_FOLDER_FALSE		  Near	 DGROUP:03A4
_IS_FOLDER_TRUE			  Near	 DGROUP:039F
_IS_VALID_NAME_END		  Near	 DGROUP:029C
_LIST_SUBFILES_RECURSIVE_END	  Near	 DGROUP:0260
_LIST_SUBFILES_RECURSIVE_LOOP	  Near	 DGROUP:017A
_LIST_SUBFILES_RECURSIVE_LOOP_PS  Near	 DGROUP:01C4
EUDOGRAPHIC_HACK
_LIST_SUBFILES_RECURSIVE_NEXT	  Near	 DGROUP:0253
_PRINT_PSEUDOGRAPHIC_PREFIX_END	  Near	 DGROUP:0314
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02E5
_LEVEL
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:030B
_LEVEL_END
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:02F9
_LEVEL_FIRST
_PRINT_PSEUDOGRAPHIC_PREFIX_ZERO  Near	 DGROUP:0302
_LEVEL_MIDDLE
_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:0348
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:0339
_SHOW_FILENAME_FROM_DTA_VALID_NA  Near	 DGROUP:02A1
ME

Macro Name

BREAK_POINT
EXIT
LOAD
POP_FRAGMENT
PRINT
PRINT_RANGE
PUSH_FRAGMENT
RESTORE
SET_DTA
Turbo Assembler	 Version 4.1	    12/15/19 15:04:15	    Page 20
Symbol Table




Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  06AA Word	  Public  CODE
