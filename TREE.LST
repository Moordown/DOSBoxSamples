Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 1
tree.ASM



      1					 include tmacro.asm
1     2
1     3
1     4					 parse_first macro fcb
1     5					     xor ax, ax
1     6					     mov ah, 11h
1     7					     mov dx, offset fcb
1     8					     int 21h
1     9					 endm
1    10
1    11					 parse_next macro fcb
1    12					     xor ax, ax
1    13					     mov ah, 12h
1    14					     mov dx, offset fcb
1    15					     int 21h
1    16					 endm
1    17
1    18
1    19					 set_dta macro addr
1    20					     xor ax, ax
1    21					     mov ah, 1Ah
1    22					     mov dx, offset addr
1    23					     int 21h
1    24					 endm
1    25
1    26					 get_dta macro
1    27					     mov ah, 2fh
1    28					     int 21h
1    29					 endm
1    30
1    31					 load macro args
1    32					     irp d,<args>
1    33						 push d
1    34					     endm
1    35					 endm
1    36
1    37					 restore macro args
1    38					     irp d,<args>
1    39						 pop d
1    40					     endm
1    41					 endm
1    42
1    43					 exit macro
1    44					     mov ax, 0
1    45					     int 21h
1    46					 endm
1    47
1    48					 print_range macro args
1    49					     irp d,<args>
1    50						 print <offset d>
1    51					     endm
1    52					 endm
1    53
1    54					 print macro buf
1    55					     xor ax, ax
1    56						 mov ah, 09h
1    57						 mov dx, buf
Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 2
tree.ASM



1    58						 int 21h
1    59					 endm
1    60
     61
     62	    0000			 model tiny
     63					 .386
     64	    0000			 .code
     65					 org 100h
     66	    0100			 start:
     67					     set_dta fcb
1    68	    0100  33 C0			     xor ax, ax
1    69	    0102  B4 1A			     mov ah, 1Ah
1    70	    0104  BA 01F7r		     mov dx, offset fcb
1    71	    0107  CD 21			     int 21h
     72	    0109  E8 0014		     call parse_command_line
     73	    010C  8B 36	01F5r		     mov si, word ptr [filename_addr] ;	root address string
     74	    0110  56			     push si
     75	    0111  E8 00B6		     call parse_filename
     76	    0114  3A 06	01DCr		     cmp al, byte ptr [parse_filename_function_falls]
     77	    0118  74 18			     je	parsing_error
     78	    011A  3A 06	01DEr		     cmp al, byte ptr [parse_filename_function_with_wildcards]
     79	    011E  74 27			     je	parsing_wildcards
     80	    0120			 parse_command_line:
     81	    0120  BE 0080		     mov si, 80h
     82	    0123  B9 000A		     mov cx, 10
     83	    0126  51			     push cx
     84	    0127  56			     push si
     85	    0128  E8 008A		     call count_non_space_symbols_with_length
     86	    012B  05 0080		     add ax, 80h
     87	    012E  A3 01F5r		     mov word ptr [filename_addr], ax
     88	    0131  C3			     ret
     89	    0132			 parsing_error:
     90					     print_range <parse_fails, newline>
2    91						 print <offset parse_fails>
3    92	    0132  33 C0			     xor ax, ax
3    93	    0134  B4 09				 mov ah, 09h
3    94	    0136  BA 01E1r			 mov dx, offset	parse_fails
3    95	    0139  CD 21				 int 21h
2    96						 print <offset newline>
3    97	    013B  33 C0			     xor ax, ax
3    98	    013D  B4 09				 mov ah, 09h
3    99	    013F  BA 01EEr			 mov dx, offset	newline
3   100	    0142  CD 21				 int 21h
    101	    0144  E9 0090		     jmp program_end
    102	    0147			 parsing_wildcards:
    103					     parse_first fcb
1   104	    0147  33 C0			     xor ax, ax
1   105	    0149  B4 11			     mov ah, 11h
1   106	    014B  BA 01F7r		     mov dx, offset fcb
1   107	    014E  CD 21			     int 21h
    108	    0150			 parsing_wildcards_loop:
    109	    0150  3A 06	01DFr		     cmp al, byte ptr [parse_iter_filename_found_code]
    110	    0154  0F 85	007F		     jne program_end
    111	    0158  E8 000B		     call print_fname_from_fcb
    112					     parse_next	fcb
1   113	    015B  33 C0			     xor ax, ax
1   114	    015D  B4 12			     mov ah, 12h
Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 3
tree.ASM



1   115	    015F  BA 01F7r		     mov dx, offset fcb
1   116	    0162  CD 21			     int 21h
    117	    0164  EB EA			     jmp parsing_wildcards_loop
    118
    119	    0166			 print_fname_from_fcb:
    120					     ;
    121					     ; fname
    122					     ;
    123	    0166  BB 01F8r		     mov bx, offset fcb	+ 01h
    124	    0169  B9 0008		     mov cx, 8
    125	    016C  51			     push cx
    126	    016D  53			     push bx
    127	    016E  E8 0044		     call count_non_space_symbols_with_length
    128	    0171  BB 01F8r		     mov bx, offset fcb	+ 01h
    129	    0174  50			     push ax
    130	    0175  53			     push bx
    131	    0176  E8 0026		     call print_string_with_length
    132
    133					     print_range <dot>
2   134						 print <offset dot>
3   135	    0179  33 C0			     xor ax, ax
3   136	    017B  B4 09				 mov ah, 09h
3   137	    017D  BA 01F0r			 mov dx, offset	dot
3   138	    0180  CD 21				 int 21h
    139					     ;
    140					     ; ext
    141					     ;
    142	    0182  BB 0200r		     mov bx, offset fcb	+ 09h
    143	    0185  B9 0003		     mov cx, 3
    144	    0188  51			     push cx
    145	    0189  53			     push bx
    146	    018A  E8 0028		     call count_non_space_symbols_with_length
    147	    018D  BB 0200r		     mov bx, offset fcb	+ 09h
    148	    0190  50			     push ax
    149	    0191  53			     push bx
    150	    0192  E8 000A		     call print_string_with_length
    151					     print_range <newline>
2   152						 print <offset newline>
3   153	    0195  33 C0			     xor ax, ax
3   154	    0197  B4 09				 mov ah, 09h
3   155	    0199  BA 01EEr			 mov dx, offset	newline
3   156	    019C  CD 21				 int 21h
    157	    019E  C3			     ret
    158
    159	    019F			 print_string_with_length:
    160	    019F  5B			     pop bx ; ret address
    161	    01A0  5E			     pop si ; string offset
    162	    01A1  59			     pop cx ; string length
    163	    01A2  53			     push bx; ret address
    164	    01A3  33 C0			     xor ax, ax
    165	    01A5			 _print_string_with_length_loop:
    166	    01A5  B4 02			     mov ah, 02h
    167	    01A7  8A 14			     mov dl, byte ptr [si]
    168	    01A9  CD 21			     int 21h
    169	    01AB  49			     dec cx
    170	    01AC  46			     inc si
    171	    01AD  83 F9	00		     cmp cx, 00h
Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 4
tree.ASM



    172	    01B0  74 02			     je	_print_string_with_length_end
    173	    01B2  EB F1			     jmp _print_string_with_length_loop
    174	    01B4			 _print_string_with_length_end:
    175	    01B4  C3			     ret
    176
    177	    01B5			 count_non_space_symbols_with_length:
    178	    01B5  5B			     pop bx ; ret address
    179	    01B6  5E			     pop si ; string offset
    180	    01B7  59			     pop cx ; string length
    181	    01B8  53			     push bx ; ret address
    182	    01B9  B8 0000		     mov ax, 0
    183	    01BC			 _count_non_space_symbols_loop:
    184	    01BC  80 3C	20		     cmp byte ptr [si],	20h
    185	    01BF  74 08			     je	_count_non_space_symbols_end
    186	    01C1  3B C1			     cmp ax, cx
    187	    01C3  74 04			     je	_count_non_space_symbols_end
    188	    01C5  40			     inc ax
    189	    01C6  46			     inc si
    190	    01C7  EB F3			     jmp _count_non_space_symbols_loop
    191	    01C9			 _count_non_space_symbols_end:
    192	    01C9  C3			     ret
    193	    01CA			 parse_filename:
    194	    01CA  5B			     pop bx ; ret addr
    195	    01CB  5E			     pop si ; filename offset
    196	    01CC  53			     push bx; ret addr
    197	    01CD  33 C0			     xor ax, ax
    198	    01CF  B4 29			     mov ah, 29h
    199	    01D1  BF 01F7r		     mov di, offset fcb
    200
    201	    01D4  CD 21			     int 21h
    202	    01D6  C3			     ret
    203	    01D7			 program_end:
    204					     exit
1   205	    01D7  B8 0000		     mov ax, 0
1   206	    01DA  CD 21			     int 21h
    207
    208
    209	    01DC  7F			 parse_filename_function_falls db 127
    210	    01DD  00			 parse_filename_function_no_wildcards db 00h
    211	    01DE  01			 parse_filename_function_with_wildcards	db 01h
    212
    213	    01DF  00			 parse_iter_filename_found_code	db 00h
    214	    01E0  7F			 parse_iter_no_filename_found_code db 127
    215
    216	    01E1  50 61	72 73 65 20 66+	 parse_fails db	'Parse fails.$'
    217		  61 69	6C 73 2E 24
    218	    01EE  0A 24			 newline db 0Ah, '$'
    219	    01F0  2E 24			 dot db	'.', '$'
    220	    01F2  2A 2E	2A		 filename db '*.*'
    221	    01F5  0000			 filename_addr dw 0
    222	    01F7  80*(00)		 fcb db	128 dup(00h)
    223					 end start
Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/07/19"
??FILENAME			  Text	 "tree	  "
??TIME				  Text	 "00:47:14"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 TREE
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
COUNT_NON_SPACE_SYMBOLS_WITH_LEN  Near	 DGROUP:01B5
GTH
DOT				  Byte	 DGROUP:01F0
FCB				  Byte	 DGROUP:01F7
FILENAME			  Byte	 DGROUP:01F2
FILENAME_ADDR			  Word	 DGROUP:01F5
NEWLINE				  Byte	 DGROUP:01EE
PARSE_COMMAND_LINE		  Near	 DGROUP:0120
PARSE_FAILS			  Byte	 DGROUP:01E1
PARSE_FILENAME			  Near	 DGROUP:01CA
PARSE_FILENAME_FUNCTION_FALLS	  Byte	 DGROUP:01DC
PARSE_FILENAME_FUNCTION_NO_WILDC  Byte	 DGROUP:01DD
ARDS
PARSE_FILENAME_FUNCTION_WITH_WIL  Byte	 DGROUP:01DE
DCARDS
PARSE_ITER_FILENAME_FOUND_CODE	  Byte	 DGROUP:01DF
PARSE_ITER_NO_FILENAME_FOUND_COD  Byte	 DGROUP:01E0
E
PARSING_ERROR			  Near	 DGROUP:0132
PARSING_WILDCARDS		  Near	 DGROUP:0147
PARSING_WILDCARDS_LOOP		  Near	 DGROUP:0150
PRINT_FNAME_FROM_FCB		  Near	 DGROUP:0166
PRINT_STRING_WITH_LENGTH	  Near	 DGROUP:019F
PROGRAM_END			  Near	 DGROUP:01D7
START				  Near	 DGROUP:0100
_COUNT_NON_SPACE_SYMBOLS_END	  Near	 DGROUP:01C9
_COUNT_NON_SPACE_SYMBOLS_LOOP	  Near	 DGROUP:01BC
_PRINT_STRING_WITH_LENGTH_END	  Near	 DGROUP:01B4
_PRINT_STRING_WITH_LENGTH_LOOP	  Near	 DGROUP:01A5

Macro Name

EXIT
GET_DTA
LOAD
PARSE_FIRST
PARSE_NEXT
PRINT
Turbo Assembler	 Version 4.1	    12/07/19 00:47:15	    Page 6
Symbol Table



PRINT_RANGE
RESTORE
SET_DTA

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  0277 Word	  Public  CODE
