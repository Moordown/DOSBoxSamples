Turbo Assembler	 Version 4.1	    12/07/19 02:01:36	    Page 1
mycd.ASM



      1					 include tmacro.asm
1     2					 cd macro root_addr
1     3					     xor ax, ax
1     4					     mov ah, 3Bh
1     5					     mov dx, root_addr
1     6					     int 21h
1     7					 endm
1     8
1     9					 mcwd macro deviceid, buf
1    10					     xor ax, ax
1    11					     mov ah, 47h
1    12					     mov dl, deviceid
1    13					     mov si, offset buf
1    14					     int 21h
1    15					 endm
1    16
1    17					 parse_filename	macro fcb, filename
1    18					     xor ax, ax
1    19					     mov ah, 29h
1    20					     mov si, offset filename
1    21					     mov di, offset fcb
1    22
1    23					     int 21h
1    24					 endm
1    25
1    26					 parse_first macro fcb
1    27					     xor ax, ax
1    28					     mov ah, 11h
1    29					     mov dx, offset fcb
1    30					     int 21h
1    31					 endm
1    32
1    33					 parse_next macro fcb
1    34					     xor ax, ax
1    35					     mov ah, 12h
1    36					     mov dx, offset fcb
1    37					     int 21h
1    38					 endm
1    39
1    40
1    41					 set_dta macro addr
1    42					     xor ax, ax
1    43					     mov ah, 1Ah
1    44					     mov dx, offset addr
1    45					     int 21h
1    46					 endm
1    47
1    48					 get_dta macro
1    49					     mov ah, 2fh
1    50					     int 21h
1    51					 endm
1    52
1    53					 load macro args
1    54					     irp d,<args>
1    55						 push d
1    56					     endm
1    57					 endm
Turbo Assembler	 Version 4.1	    12/07/19 02:01:36	    Page 2
mycd.ASM



1    58
1    59					 restore macro args
1    60					     irp d,<args>
1    61						 pop d
1    62					     endm
1    63					 endm
1    64
1    65					 exit macro
1    66					     mov ax, 0
1    67					     int 21h
1    68					 endm
1    69
1    70					 print_range macro args
1    71					     irp d,<args>
1    72						 print <offset d>
1    73					     endm
1    74					 endm
1    75
1    76					 print macro buf
1    77					     xor ax, ax
1    78						 mov ah, 09h
1    79						 mov dx, buf
1    80						 int 21h
1    81					 endm
1    82
     83
     84	    0000			 model tiny
     85					 .386
     86	    0000			 .code
     87					 org 100h
     88	    0100			 start:
     89	    0100  BA 0154r		     mov dx, offset root
     90	    0103  B4 3B			     mov ah, 3Bh
     91	    0105  CD 21			     int 21h
     92
     93	    0107  3C 03			     cmp al, 3
     94	    0109  75 12			     jne l1
     95					     print_range <error_with_cd, newline>
2    96						 print <offset error_with_cd>
3    97	    010B  33 C0			     xor ax, ax
3    98	    010D  B4 09				 mov ah, 09h
3    99	    010F  BA 013Cr			 mov dx, offset	error_with_cd
3   100	    0112  CD 21				 int 21h
2   101						 print <offset newline>
3   102	    0114  33 C0			     xor ax, ax
3   103	    0116  B4 09				 mov ah, 09h
3   104	    0118  BA 019Er			 mov dx, offset	newline
3   105	    011B  CD 21				 int 21h
    106	    011D			 l1:
    107
    108	    011D  B4 47			     mov ah, 47h
    109	    011F  B2 03			     mov dl, 3
    110	    0121  BE 015Er		     mov si, offset current
    111	    0124  CD 21			     int 21h
    112
    113					     print_range <current, newline>
2   114						 print <offset current>
Turbo Assembler	 Version 4.1	    12/07/19 02:01:36	    Page 3
mycd.ASM



3   115	    0126  33 C0			     xor ax, ax
3   116	    0128  B4 09				 mov ah, 09h
3   117	    012A  BA 015Er			 mov dx, offset	current
3   118	    012D  CD 21				 int 21h
2   119						 print <offset newline>
3   120	    012F  33 C0			     xor ax, ax
3   121	    0131  B4 09				 mov ah, 09h
3   122	    0133  BA 019Er			 mov dx, offset	newline
3   123	    0136  CD 21				 int 21h
    124
    125	    0138  B4 00			     mov ah, 00h
    126	    013A  CD 21			     int 21h
    127	    013C  46 61	69 6C 73 20 63+	 error_with_cd db 'Fails chande	dirrectory$'
    128		  68 61	6E 64 65 20 64+
    129		  69 72	72 65 63 74 6F+
    130		  72 79	24
    131	    0154  63 3A	5C 74 65 73 74+	 root db 'c:\test1\', 00h
    132		  31 5C	00
    133	    015E  40*(24)		 current db 64 dup('$')
    134	    019E  0A 24			 newline db 0Ah, '$'
    135					 end start
Turbo Assembler	 Version 4.1	    12/07/19 02:01:36	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/07/19"
??FILENAME			  Text	 "mycd	  "
??TIME				  Text	 "02:01:36"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0F0FH
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 MYCD
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CURRENT				  Byte	 DGROUP:015E
ERROR_WITH_CD			  Byte	 DGROUP:013C
L1				  Near	 DGROUP:011D
NEWLINE				  Byte	 DGROUP:019E
ROOT				  Byte	 DGROUP:0154
START				  Near	 DGROUP:0100

Macro Name

CD
EXIT
GET_DTA
LOAD
MCWD
PARSE_FILENAME
PARSE_FIRST
PARSE_NEXT
PRINT
PRINT_RANGE
RESTORE
SET_DTA

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  01A0 Word	  Public  CODE
